#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace API
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CurtDev")]
	public partial class CurtDevDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertClass(Class instance);
    partial void UpdateClass(Class instance);
    partial void DeleteClass(Class instance);
    partial void InsertMake(Make instance);
    partial void UpdateMake(Make instance);
    partial void DeleteMake(Make instance);
    partial void InsertModel(Model instance);
    partial void UpdateModel(Model instance);
    partial void DeleteModel(Model instance);
    partial void InsertYear(Year instance);
    partial void UpdateYear(Year instance);
    partial void DeleteYear(Year instance);
    partial void InsertStyle(Style instance);
    partial void UpdateStyle(Style instance);
    partial void DeleteStyle(Style instance);
    partial void InsertPart(Part instance);
    partial void UpdatePart(Part instance);
    partial void DeletePart(Part instance);
    partial void InsertPartImageSize(PartImageSize instance);
    partial void UpdatePartImageSize(PartImageSize instance);
    partial void DeletePartImageSize(PartImageSize instance);
    partial void InsertRelatedType(RelatedType instance);
    partial void UpdateRelatedType(RelatedType instance);
    partial void DeleteRelatedType(RelatedType instance);
    partial void InsertVehiclePartAttribute(VehiclePartAttribute instance);
    partial void UpdateVehiclePartAttribute(VehiclePartAttribute instance);
    partial void DeleteVehiclePartAttribute(VehiclePartAttribute instance);
    partial void InsertPartState(PartState instance);
    partial void UpdatePartState(PartState instance);
    partial void DeletePartState(PartState instance);
    partial void InsertTrailer(Trailer instance);
    partial void UpdateTrailer(Trailer instance);
    partial void DeleteTrailer(Trailer instance);
    partial void InsertDealerType(DealerType instance);
    partial void UpdateDealerType(DealerType instance);
    partial void DeleteDealerType(DealerType instance);
    partial void InsertCustomerPricing(CustomerPricing instance);
    partial void UpdateCustomerPricing(CustomerPricing instance);
    partial void DeleteCustomerPricing(CustomerPricing instance);
    partial void InsertCountry(Country instance);
    partial void UpdateCountry(Country instance);
    partial void DeleteCountry(Country instance);
    partial void InsertContent(Content instance);
    partial void UpdateContent(Content instance);
    partial void DeleteContent(Content instance);
    partial void InsertCartIntegration(CartIntegration instance);
    partial void UpdateCartIntegration(CartIntegration instance);
    partial void DeleteCartIntegration(CartIntegration instance);
    partial void InsertWidgetDeployment(WidgetDeployment instance);
    partial void UpdateWidgetDeployment(WidgetDeployment instance);
    partial void DeleteWidgetDeployment(WidgetDeployment instance);
    partial void InsertPartIndex(PartIndex instance);
    partial void UpdatePartIndex(PartIndex instance);
    partial void DeletePartIndex(PartIndex instance);
    partial void InsertCustomerLocation(CustomerLocation instance);
    partial void UpdateCustomerLocation(CustomerLocation instance);
    partial void DeleteCustomerLocation(CustomerLocation instance);
    partial void InsertFile(File instance);
    partial void UpdateFile(File instance);
    partial void DeleteFile(File instance);
    partial void InsertFileExt(FileExt instance);
    partial void UpdateFileExt(FileExt instance);
    partial void DeleteFileExt(FileExt instance);
    partial void InsertFileType(FileType instance);
    partial void UpdateFileType(FileType instance);
    partial void DeleteFileType(FileType instance);
    partial void InsertCategories(Categories instance);
    partial void UpdateCategories(Categories instance);
    partial void DeleteCategories(Categories instance);
    partial void InsertCatPart(CatPart instance);
    partial void UpdateCatPart(CatPart instance);
    partial void DeleteCatPart(CatPart instance);
    partial void InsertMakeModel(MakeModel instance);
    partial void UpdateMakeModel(MakeModel instance);
    partial void DeleteMakeModel(MakeModel instance);
    partial void InsertModelStyle(ModelStyle instance);
    partial void UpdateModelStyle(ModelStyle instance);
    partial void DeleteModelStyle(ModelStyle instance);
    partial void InsertYearMake(YearMake instance);
    partial void UpdateYearMake(YearMake instance);
    partial void DeleteYearMake(YearMake instance);
    partial void InsertPartAttribute(PartAttribute instance);
    partial void UpdatePartAttribute(PartAttribute instance);
    partial void DeletePartAttribute(PartAttribute instance);
    partial void InsertVehicle(Vehicle instance);
    partial void UpdateVehicle(Vehicle instance);
    partial void DeleteVehicle(Vehicle instance);
    partial void InsertLifestyle_Trailer(Lifestyle_Trailer instance);
    partial void UpdateLifestyle_Trailer(Lifestyle_Trailer instance);
    partial void DeleteLifestyle_Trailer(Lifestyle_Trailer instance);
    partial void InsertPrice(Price instance);
    partial void UpdatePrice(Price instance);
    partial void DeletePrice(Price instance);
    partial void InsertReview(Review instance);
    partial void UpdateReview(Review instance);
    partial void DeleteReview(Review instance);
    partial void InsertPartImage(PartImage instance);
    partial void UpdatePartImage(PartImage instance);
    partial void DeletePartImage(PartImage instance);
    partial void InsertContentType(ContentType instance);
    partial void UpdateContentType(ContentType instance);
    partial void DeleteContentType(ContentType instance);
    partial void InsertVehiclePart(VehiclePart instance);
    partial void UpdateVehiclePart(VehiclePart instance);
    partial void DeleteVehiclePart(VehiclePart instance);
    partial void InsertRelatedPart(RelatedPart instance);
    partial void UpdateRelatedPart(RelatedPart instance);
    partial void DeleteRelatedPart(RelatedPart instance);
    partial void InsertPartVideo(PartVideo instance);
    partial void UpdatePartVideo(PartVideo instance);
    partial void DeletePartVideo(PartVideo instance);
    partial void InsertvideoType(videoType instance);
    partial void UpdatevideoType(videoType instance);
    partial void DeletevideoType(videoType instance);
    partial void InsertContentBridge(ContentBridge instance);
    partial void UpdateContentBridge(ContentBridge instance);
    partial void DeleteContentBridge(ContentBridge instance);
    partial void InsertUnitOfMeasure(UnitOfMeasure instance);
    partial void UpdateUnitOfMeasure(UnitOfMeasure instance);
    partial void DeleteUnitOfMeasure(UnitOfMeasure instance);
    partial void InsertPartPackage(PartPackage instance);
    partial void UpdatePartPackage(PartPackage instance);
    partial void DeletePartPackage(PartPackage instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertApiAccess(ApiAccess instance);
    partial void UpdateApiAccess(ApiAccess instance);
    partial void DeleteApiAccess(ApiAccess instance);
    partial void InsertApiKey(ApiKey instance);
    partial void UpdateApiKey(ApiKey instance);
    partial void DeleteApiKey(ApiKey instance);
    partial void InsertApiKeyType(ApiKeyType instance);
    partial void UpdateApiKeyType(ApiKeyType instance);
    partial void DeleteApiKeyType(ApiKeyType instance);
    partial void InsertApiModule(ApiModule instance);
    partial void UpdateApiModule(ApiModule instance);
    partial void DeleteApiModule(ApiModule instance);
    partial void InsertCustomerUser(CustomerUser instance);
    partial void UpdateCustomerUser(CustomerUser instance);
    partial void DeleteCustomerUser(CustomerUser instance);
    partial void InsertIPtoDNS(IPtoDNS instance);
    partial void UpdateIPtoDNS(IPtoDNS instance);
    partial void DeleteIPtoDNS(IPtoDNS instance);
    partial void InsertAPIAnalytic(APIAnalytic instance);
    partial void UpdateAPIAnalytic(APIAnalytic instance);
    partial void DeleteAPIAnalytic(APIAnalytic instance);
    #endregion
		
		public CurtDevDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CurtDevConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CurtDevDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CurtDevDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CurtDevDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CurtDevDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Class> Classes
		{
			get
			{
				return this.GetTable<Class>();
			}
		}
		
		public System.Data.Linq.Table<Make> Makes
		{
			get
			{
				return this.GetTable<Make>();
			}
		}
		
		public System.Data.Linq.Table<Model> Models
		{
			get
			{
				return this.GetTable<Model>();
			}
		}
		
		public System.Data.Linq.Table<Year> Years
		{
			get
			{
				return this.GetTable<Year>();
			}
		}
		
		public System.Data.Linq.Table<Style> Styles
		{
			get
			{
				return this.GetTable<Style>();
			}
		}
		
		public System.Data.Linq.Table<Part> Parts
		{
			get
			{
				return this.GetTable<Part>();
			}
		}
		
		public System.Data.Linq.Table<PartImageSize> PartImageSizes
		{
			get
			{
				return this.GetTable<PartImageSize>();
			}
		}
		
		public System.Data.Linq.Table<RelatedType> RelatedTypes
		{
			get
			{
				return this.GetTable<RelatedType>();
			}
		}
		
		public System.Data.Linq.Table<VehiclePartAttribute> VehiclePartAttributes
		{
			get
			{
				return this.GetTable<VehiclePartAttribute>();
			}
		}
		
		public System.Data.Linq.Table<PartState> PartStates
		{
			get
			{
				return this.GetTable<PartState>();
			}
		}
		
		public System.Data.Linq.Table<Trailer> Trailers
		{
			get
			{
				return this.GetTable<Trailer>();
			}
		}
		
		public System.Data.Linq.Table<DealerType> DealerTypes
		{
			get
			{
				return this.GetTable<DealerType>();
			}
		}
		
		public System.Data.Linq.Table<CustomerPricing> CustomerPricings
		{
			get
			{
				return this.GetTable<CustomerPricing>();
			}
		}
		
		public System.Data.Linq.Table<Country> Countries
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<Content> Contents
		{
			get
			{
				return this.GetTable<Content>();
			}
		}
		
		public System.Data.Linq.Table<ColorCode> ColorCodes
		{
			get
			{
				return this.GetTable<ColorCode>();
			}
		}
		
		public System.Data.Linq.Table<CartIntegration> CartIntegrations
		{
			get
			{
				return this.GetTable<CartIntegration>();
			}
		}
		
		public System.Data.Linq.Table<WidgetDeployment> WidgetDeployments
		{
			get
			{
				return this.GetTable<WidgetDeployment>();
			}
		}
		
		public System.Data.Linq.Table<PartIndex> PartIndexes
		{
			get
			{
				return this.GetTable<PartIndex>();
			}
		}
		
		public System.Data.Linq.Table<CustomerLocation> CustomerLocations
		{
			get
			{
				return this.GetTable<CustomerLocation>();
			}
		}
		
		public System.Data.Linq.Table<File> Files
		{
			get
			{
				return this.GetTable<File>();
			}
		}
		
		public System.Data.Linq.Table<FileExt> FileExts
		{
			get
			{
				return this.GetTable<FileExt>();
			}
		}
		
		public System.Data.Linq.Table<FileType> FileTypes
		{
			get
			{
				return this.GetTable<FileType>();
			}
		}
		
		public System.Data.Linq.Table<Categories> Categories
		{
			get
			{
				return this.GetTable<Categories>();
			}
		}
		
		public System.Data.Linq.Table<CatPart> CatParts
		{
			get
			{
				return this.GetTable<CatPart>();
			}
		}
		
		public System.Data.Linq.Table<MakeModel> MakeModels
		{
			get
			{
				return this.GetTable<MakeModel>();
			}
		}
		
		public System.Data.Linq.Table<ModelStyle> ModelStyles
		{
			get
			{
				return this.GetTable<ModelStyle>();
			}
		}
		
		public System.Data.Linq.Table<YearMake> YearMakes
		{
			get
			{
				return this.GetTable<YearMake>();
			}
		}
		
		public System.Data.Linq.Table<PartAttribute> PartAttributes
		{
			get
			{
				return this.GetTable<PartAttribute>();
			}
		}
		
		public System.Data.Linq.Table<Vehicle> Vehicles
		{
			get
			{
				return this.GetTable<Vehicle>();
			}
		}
		
		public System.Data.Linq.Table<Lifestyle_Trailer> Lifestyle_Trailers
		{
			get
			{
				return this.GetTable<Lifestyle_Trailer>();
			}
		}
		
		public System.Data.Linq.Table<Price> Prices
		{
			get
			{
				return this.GetTable<Price>();
			}
		}
		
		public System.Data.Linq.Table<Review> Reviews
		{
			get
			{
				return this.GetTable<Review>();
			}
		}
		
		public System.Data.Linq.Table<PartImage> PartImages
		{
			get
			{
				return this.GetTable<PartImage>();
			}
		}
		
		public System.Data.Linq.Table<ContentType> ContentTypes
		{
			get
			{
				return this.GetTable<ContentType>();
			}
		}
		
		public System.Data.Linq.Table<VehiclePart> VehicleParts
		{
			get
			{
				return this.GetTable<VehiclePart>();
			}
		}
		
		public System.Data.Linq.Table<RelatedPart> RelatedParts
		{
			get
			{
				return this.GetTable<RelatedPart>();
			}
		}
		
		public System.Data.Linq.Table<PartVideo> PartVideos
		{
			get
			{
				return this.GetTable<PartVideo>();
			}
		}
		
		public System.Data.Linq.Table<videoType> videoTypes
		{
			get
			{
				return this.GetTable<videoType>();
			}
		}
		
		public System.Data.Linq.Table<ContentBridge> ContentBridges
		{
			get
			{
				return this.GetTable<ContentBridge>();
			}
		}
		
		public System.Data.Linq.Table<UnitOfMeasure> UnitOfMeasures
		{
			get
			{
				return this.GetTable<UnitOfMeasure>();
			}
		}
		
		public System.Data.Linq.Table<PartPackage> PartPackages
		{
			get
			{
				return this.GetTable<PartPackage>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<ApiAccess> ApiAccesses
		{
			get
			{
				return this.GetTable<ApiAccess>();
			}
		}
		
		public System.Data.Linq.Table<ApiKey> ApiKeys
		{
			get
			{
				return this.GetTable<ApiKey>();
			}
		}
		
		public System.Data.Linq.Table<ApiKeyType> ApiKeyTypes
		{
			get
			{
				return this.GetTable<ApiKeyType>();
			}
		}
		
		public System.Data.Linq.Table<ApiModule> ApiModules
		{
			get
			{
				return this.GetTable<ApiModule>();
			}
		}
		
		public System.Data.Linq.Table<CustomerUser> CustomerUsers
		{
			get
			{
				return this.GetTable<CustomerUser>();
			}
		}
		
		public System.Data.Linq.Table<IPtoDNS> IPtoDNS
		{
			get
			{
				return this.GetTable<IPtoDNS>();
			}
		}
		
		public System.Data.Linq.Table<APIAnalytic> APIAnalytics
		{
			get
			{
				return this.GetTable<APIAnalytic>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.searchIndex")]
		public ISingleResult<Part> searchIndex([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string searchparams)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), searchparams);
			return ((ISingleResult<Part>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Class")]
	public partial class Class : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _classID;
		
		private string _class1;
		
		private string _image;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnclassIDChanging(int value);
    partial void OnclassIDChanged();
    partial void Onclass1Changing(string value);
    partial void Onclass1Changed();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    #endregion
		
		public Class()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_classID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int classID
		{
			get
			{
				return this._classID;
			}
			set
			{
				if ((this._classID != value))
				{
					this.OnclassIDChanging(value);
					this.SendPropertyChanging();
					this._classID = value;
					this.SendPropertyChanged("classID");
					this.OnclassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="class", Storage="_class1", DbType="VarChar(255)")]
		public string class1
		{
			get
			{
				return this._class1;
			}
			set
			{
				if ((this._class1 != value))
				{
					this.Onclass1Changing(value);
					this.SendPropertyChanging();
					this._class1 = value;
					this.SendPropertyChanged("class1");
					this.Onclass1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="VarChar(255)")]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Make")]
	public partial class Make : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _makeID;
		
		private string _make1;
		
		private EntitySet<MakeModel> _MakeModels;
		
		private EntitySet<YearMake> _YearMakes;
		
		private EntitySet<Vehicle> _Vehicles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmakeIDChanging(int value);
    partial void OnmakeIDChanged();
    partial void Onmake1Changing(string value);
    partial void Onmake1Changed();
    #endregion
		
		public Make()
		{
			this._MakeModels = new EntitySet<MakeModel>(new Action<MakeModel>(this.attach_MakeModels), new Action<MakeModel>(this.detach_MakeModels));
			this._YearMakes = new EntitySet<YearMake>(new Action<YearMake>(this.attach_YearMakes), new Action<YearMake>(this.detach_YearMakes));
			this._Vehicles = new EntitySet<Vehicle>(new Action<Vehicle>(this.attach_Vehicles), new Action<Vehicle>(this.detach_Vehicles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_makeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int makeID
		{
			get
			{
				return this._makeID;
			}
			set
			{
				if ((this._makeID != value))
				{
					this.OnmakeIDChanging(value);
					this.SendPropertyChanging();
					this._makeID = value;
					this.SendPropertyChanged("makeID");
					this.OnmakeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="make", Storage="_make1", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string make1
		{
			get
			{
				return this._make1;
			}
			set
			{
				if ((this._make1 != value))
				{
					this.Onmake1Changing(value);
					this.SendPropertyChanging();
					this._make1 = value;
					this.SendPropertyChanged("make1");
					this.Onmake1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Make_MakeModel", Storage="_MakeModels", ThisKey="makeID", OtherKey="makeID")]
		public EntitySet<MakeModel> MakeModels
		{
			get
			{
				return this._MakeModels;
			}
			set
			{
				this._MakeModels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Make_YearMake", Storage="_YearMakes", ThisKey="makeID", OtherKey="makeID")]
		public EntitySet<YearMake> YearMakes
		{
			get
			{
				return this._YearMakes;
			}
			set
			{
				this._YearMakes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Make_Vehicle", Storage="_Vehicles", ThisKey="makeID", OtherKey="makeID")]
		public EntitySet<Vehicle> Vehicles
		{
			get
			{
				return this._Vehicles;
			}
			set
			{
				this._Vehicles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MakeModels(MakeModel entity)
		{
			this.SendPropertyChanging();
			entity.Make = this;
		}
		
		private void detach_MakeModels(MakeModel entity)
		{
			this.SendPropertyChanging();
			entity.Make = null;
		}
		
		private void attach_YearMakes(YearMake entity)
		{
			this.SendPropertyChanging();
			entity.Make = this;
		}
		
		private void detach_YearMakes(YearMake entity)
		{
			this.SendPropertyChanging();
			entity.Make = null;
		}
		
		private void attach_Vehicles(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.Make = this;
		}
		
		private void detach_Vehicles(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.Make = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Model")]
	public partial class Model : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _modelID;
		
		private string _model1;
		
		private EntitySet<MakeModel> _MakeModels;
		
		private EntitySet<ModelStyle> _ModelStyles;
		
		private EntitySet<Vehicle> _Vehicles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmodelIDChanging(int value);
    partial void OnmodelIDChanged();
    partial void Onmodel1Changing(string value);
    partial void Onmodel1Changed();
    #endregion
		
		public Model()
		{
			this._MakeModels = new EntitySet<MakeModel>(new Action<MakeModel>(this.attach_MakeModels), new Action<MakeModel>(this.detach_MakeModels));
			this._ModelStyles = new EntitySet<ModelStyle>(new Action<ModelStyle>(this.attach_ModelStyles), new Action<ModelStyle>(this.detach_ModelStyles));
			this._Vehicles = new EntitySet<Vehicle>(new Action<Vehicle>(this.attach_Vehicles), new Action<Vehicle>(this.detach_Vehicles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modelID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int modelID
		{
			get
			{
				return this._modelID;
			}
			set
			{
				if ((this._modelID != value))
				{
					this.OnmodelIDChanging(value);
					this.SendPropertyChanging();
					this._modelID = value;
					this.SendPropertyChanged("modelID");
					this.OnmodelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="model", Storage="_model1", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string model1
		{
			get
			{
				return this._model1;
			}
			set
			{
				if ((this._model1 != value))
				{
					this.Onmodel1Changing(value);
					this.SendPropertyChanging();
					this._model1 = value;
					this.SendPropertyChanged("model1");
					this.Onmodel1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Model_MakeModel", Storage="_MakeModels", ThisKey="modelID", OtherKey="modelID")]
		public EntitySet<MakeModel> MakeModels
		{
			get
			{
				return this._MakeModels;
			}
			set
			{
				this._MakeModels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Model_ModelStyle", Storage="_ModelStyles", ThisKey="modelID", OtherKey="modelID")]
		public EntitySet<ModelStyle> ModelStyles
		{
			get
			{
				return this._ModelStyles;
			}
			set
			{
				this._ModelStyles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Model_Vehicle", Storage="_Vehicles", ThisKey="modelID", OtherKey="modelID")]
		public EntitySet<Vehicle> Vehicles
		{
			get
			{
				return this._Vehicles;
			}
			set
			{
				this._Vehicles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MakeModels(MakeModel entity)
		{
			this.SendPropertyChanging();
			entity.Model = this;
		}
		
		private void detach_MakeModels(MakeModel entity)
		{
			this.SendPropertyChanging();
			entity.Model = null;
		}
		
		private void attach_ModelStyles(ModelStyle entity)
		{
			this.SendPropertyChanging();
			entity.Model = this;
		}
		
		private void detach_ModelStyles(ModelStyle entity)
		{
			this.SendPropertyChanging();
			entity.Model = null;
		}
		
		private void attach_Vehicles(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.Model = this;
		}
		
		private void detach_Vehicles(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.Model = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Year")]
	public partial class Year : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _yearID;
		
		private double _year1;
		
		private EntitySet<YearMake> _YearMakes;
		
		private EntitySet<Vehicle> _Vehicles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnyearIDChanging(int value);
    partial void OnyearIDChanged();
    partial void Onyear1Changing(double value);
    partial void Onyear1Changed();
    #endregion
		
		public Year()
		{
			this._YearMakes = new EntitySet<YearMake>(new Action<YearMake>(this.attach_YearMakes), new Action<YearMake>(this.detach_YearMakes));
			this._Vehicles = new EntitySet<Vehicle>(new Action<Vehicle>(this.attach_Vehicles), new Action<Vehicle>(this.detach_Vehicles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_yearID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int yearID
		{
			get
			{
				return this._yearID;
			}
			set
			{
				if ((this._yearID != value))
				{
					this.OnyearIDChanging(value);
					this.SendPropertyChanging();
					this._yearID = value;
					this.SendPropertyChanged("yearID");
					this.OnyearIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="year", Storage="_year1", DbType="Float NOT NULL")]
		public double year1
		{
			get
			{
				return this._year1;
			}
			set
			{
				if ((this._year1 != value))
				{
					this.Onyear1Changing(value);
					this.SendPropertyChanging();
					this._year1 = value;
					this.SendPropertyChanged("year1");
					this.Onyear1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Year_YearMake", Storage="_YearMakes", ThisKey="yearID", OtherKey="yearID")]
		public EntitySet<YearMake> YearMakes
		{
			get
			{
				return this._YearMakes;
			}
			set
			{
				this._YearMakes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Year_Vehicle", Storage="_Vehicles", ThisKey="yearID", OtherKey="yearID")]
		public EntitySet<Vehicle> Vehicles
		{
			get
			{
				return this._Vehicles;
			}
			set
			{
				this._Vehicles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_YearMakes(YearMake entity)
		{
			this.SendPropertyChanging();
			entity.Year = this;
		}
		
		private void detach_YearMakes(YearMake entity)
		{
			this.SendPropertyChanging();
			entity.Year = null;
		}
		
		private void attach_Vehicles(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.Year = this;
		}
		
		private void detach_Vehicles(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.Year = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Style")]
	public partial class Style : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _styleID;
		
		private string _style1;
		
		private int _aaiaID;
		
		private EntitySet<ModelStyle> _ModelStyles;
		
		private EntitySet<Vehicle> _Vehicles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnstyleIDChanging(int value);
    partial void OnstyleIDChanged();
    partial void Onstyle1Changing(string value);
    partial void Onstyle1Changed();
    partial void OnaaiaIDChanging(int value);
    partial void OnaaiaIDChanged();
    #endregion
		
		public Style()
		{
			this._ModelStyles = new EntitySet<ModelStyle>(new Action<ModelStyle>(this.attach_ModelStyles), new Action<ModelStyle>(this.detach_ModelStyles));
			this._Vehicles = new EntitySet<Vehicle>(new Action<Vehicle>(this.attach_Vehicles), new Action<Vehicle>(this.detach_Vehicles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_styleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int styleID
		{
			get
			{
				return this._styleID;
			}
			set
			{
				if ((this._styleID != value))
				{
					this.OnstyleIDChanging(value);
					this.SendPropertyChanging();
					this._styleID = value;
					this.SendPropertyChanged("styleID");
					this.OnstyleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="style", Storage="_style1", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string style1
		{
			get
			{
				return this._style1;
			}
			set
			{
				if ((this._style1 != value))
				{
					this.Onstyle1Changing(value);
					this.SendPropertyChanging();
					this._style1 = value;
					this.SendPropertyChanged("style1");
					this.Onstyle1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aaiaID", DbType="Int NOT NULL")]
		public int aaiaID
		{
			get
			{
				return this._aaiaID;
			}
			set
			{
				if ((this._aaiaID != value))
				{
					this.OnaaiaIDChanging(value);
					this.SendPropertyChanging();
					this._aaiaID = value;
					this.SendPropertyChanged("aaiaID");
					this.OnaaiaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Style_ModelStyle", Storage="_ModelStyles", ThisKey="styleID", OtherKey="styleID")]
		public EntitySet<ModelStyle> ModelStyles
		{
			get
			{
				return this._ModelStyles;
			}
			set
			{
				this._ModelStyles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Style_Vehicle", Storage="_Vehicles", ThisKey="styleID", OtherKey="styleID")]
		public EntitySet<Vehicle> Vehicles
		{
			get
			{
				return this._Vehicles;
			}
			set
			{
				this._Vehicles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ModelStyles(ModelStyle entity)
		{
			this.SendPropertyChanging();
			entity.Style = this;
		}
		
		private void detach_ModelStyles(ModelStyle entity)
		{
			this.SendPropertyChanging();
			entity.Style = null;
		}
		
		private void attach_Vehicles(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.Style = this;
		}
		
		private void detach_Vehicles(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.Style = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Part")]
	public partial class Part : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _partID;
		
		private int _status;
		
		private System.DateTime _dateModified;
		
		private System.DateTime _dateAdded;
		
		private string _shortDesc;
		
		private string _oldPartNumber;
		
		private System.Nullable<int> _priceCode;
		
		private int _classID;
		
		private bool _featured;
		
		private EntitySet<CatPart> _CatParts;
		
		private EntitySet<PartAttribute> _PartAttributes;
		
		private EntitySet<Price> _Prices;
		
		private EntitySet<Review> _Reviews;
		
		private EntitySet<PartImage> _PartImages;
		
		private EntitySet<VehiclePart> _VehicleParts;
		
		private EntitySet<RelatedPart> _RelatedParts;
		
		private EntitySet<PartVideo> _PartVideos;
		
		private EntitySet<ContentBridge> _ContentBridges;
		
		private EntitySet<PartPackage> _PartPackages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpartIDChanging(int value);
    partial void OnpartIDChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    partial void OndateModifiedChanging(System.DateTime value);
    partial void OndateModifiedChanged();
    partial void OndateAddedChanging(System.DateTime value);
    partial void OndateAddedChanged();
    partial void OnshortDescChanging(string value);
    partial void OnshortDescChanged();
    partial void OnoldPartNumberChanging(string value);
    partial void OnoldPartNumberChanged();
    partial void OnpriceCodeChanging(System.Nullable<int> value);
    partial void OnpriceCodeChanged();
    partial void OnclassIDChanging(int value);
    partial void OnclassIDChanged();
    partial void OnfeaturedChanging(bool value);
    partial void OnfeaturedChanged();
    #endregion
		
		public Part()
		{
			this._CatParts = new EntitySet<CatPart>(new Action<CatPart>(this.attach_CatParts), new Action<CatPart>(this.detach_CatParts));
			this._PartAttributes = new EntitySet<PartAttribute>(new Action<PartAttribute>(this.attach_PartAttributes), new Action<PartAttribute>(this.detach_PartAttributes));
			this._Prices = new EntitySet<Price>(new Action<Price>(this.attach_Prices), new Action<Price>(this.detach_Prices));
			this._Reviews = new EntitySet<Review>(new Action<Review>(this.attach_Reviews), new Action<Review>(this.detach_Reviews));
			this._PartImages = new EntitySet<PartImage>(new Action<PartImage>(this.attach_PartImages), new Action<PartImage>(this.detach_PartImages));
			this._VehicleParts = new EntitySet<VehiclePart>(new Action<VehiclePart>(this.attach_VehicleParts), new Action<VehiclePart>(this.detach_VehicleParts));
			this._RelatedParts = new EntitySet<RelatedPart>(new Action<RelatedPart>(this.attach_RelatedParts), new Action<RelatedPart>(this.detach_RelatedParts));
			this._PartVideos = new EntitySet<PartVideo>(new Action<PartVideo>(this.attach_PartVideos), new Action<PartVideo>(this.detach_PartVideos));
			this._ContentBridges = new EntitySet<ContentBridge>(new Action<ContentBridge>(this.attach_ContentBridges), new Action<ContentBridge>(this.detach_ContentBridges));
			this._PartPackages = new EntitySet<PartPackage>(new Action<PartPackage>(this.attach_PartPackages), new Action<PartPackage>(this.detach_PartPackages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int partID
		{
			get
			{
				return this._partID;
			}
			set
			{
				if ((this._partID != value))
				{
					this.OnpartIDChanging(value);
					this.SendPropertyChanging();
					this._partID = value;
					this.SendPropertyChanged("partID");
					this.OnpartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateModified", DbType="DateTime NOT NULL")]
		public System.DateTime dateModified
		{
			get
			{
				return this._dateModified;
			}
			set
			{
				if ((this._dateModified != value))
				{
					this.OndateModifiedChanging(value);
					this.SendPropertyChanging();
					this._dateModified = value;
					this.SendPropertyChanged("dateModified");
					this.OndateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateAdded", DbType="DateTime NOT NULL")]
		public System.DateTime dateAdded
		{
			get
			{
				return this._dateAdded;
			}
			set
			{
				if ((this._dateAdded != value))
				{
					this.OndateAddedChanging(value);
					this.SendPropertyChanging();
					this._dateAdded = value;
					this.SendPropertyChanged("dateAdded");
					this.OndateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shortDesc", DbType="VarChar(255)")]
		public string shortDesc
		{
			get
			{
				return this._shortDesc;
			}
			set
			{
				if ((this._shortDesc != value))
				{
					this.OnshortDescChanging(value);
					this.SendPropertyChanging();
					this._shortDesc = value;
					this.SendPropertyChanged("shortDesc");
					this.OnshortDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_oldPartNumber", DbType="VarChar(100)")]
		public string oldPartNumber
		{
			get
			{
				return this._oldPartNumber;
			}
			set
			{
				if ((this._oldPartNumber != value))
				{
					this.OnoldPartNumberChanging(value);
					this.SendPropertyChanging();
					this._oldPartNumber = value;
					this.SendPropertyChanged("oldPartNumber");
					this.OnoldPartNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_priceCode", DbType="Int")]
		public System.Nullable<int> priceCode
		{
			get
			{
				return this._priceCode;
			}
			set
			{
				if ((this._priceCode != value))
				{
					this.OnpriceCodeChanging(value);
					this.SendPropertyChanging();
					this._priceCode = value;
					this.SendPropertyChanged("priceCode");
					this.OnpriceCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_classID", DbType="Int NOT NULL")]
		public int classID
		{
			get
			{
				return this._classID;
			}
			set
			{
				if ((this._classID != value))
				{
					this.OnclassIDChanging(value);
					this.SendPropertyChanging();
					this._classID = value;
					this.SendPropertyChanged("classID");
					this.OnclassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_featured", DbType="Bit NOT NULL")]
		public bool featured
		{
			get
			{
				return this._featured;
			}
			set
			{
				if ((this._featured != value))
				{
					this.OnfeaturedChanging(value);
					this.SendPropertyChanging();
					this._featured = value;
					this.SendPropertyChanged("featured");
					this.OnfeaturedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Part_CatPart", Storage="_CatParts", ThisKey="partID", OtherKey="partID")]
		public EntitySet<CatPart> CatParts
		{
			get
			{
				return this._CatParts;
			}
			set
			{
				this._CatParts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Part_PartAttribute", Storage="_PartAttributes", ThisKey="partID", OtherKey="partID")]
		public EntitySet<PartAttribute> PartAttributes
		{
			get
			{
				return this._PartAttributes;
			}
			set
			{
				this._PartAttributes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Part_Price", Storage="_Prices", ThisKey="partID", OtherKey="partID")]
		public EntitySet<Price> Prices
		{
			get
			{
				return this._Prices;
			}
			set
			{
				this._Prices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Part_Review", Storage="_Reviews", ThisKey="partID", OtherKey="partID")]
		public EntitySet<Review> Reviews
		{
			get
			{
				return this._Reviews;
			}
			set
			{
				this._Reviews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Part_PartImage", Storage="_PartImages", ThisKey="partID", OtherKey="partID")]
		public EntitySet<PartImage> PartImages
		{
			get
			{
				return this._PartImages;
			}
			set
			{
				this._PartImages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Part_VehiclePart", Storage="_VehicleParts", ThisKey="partID", OtherKey="partID")]
		public EntitySet<VehiclePart> VehicleParts
		{
			get
			{
				return this._VehicleParts;
			}
			set
			{
				this._VehicleParts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Part_RelatedPart", Storage="_RelatedParts", ThisKey="partID", OtherKey="partID")]
		public EntitySet<RelatedPart> RelatedParts
		{
			get
			{
				return this._RelatedParts;
			}
			set
			{
				this._RelatedParts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Part_PartVideo", Storage="_PartVideos", ThisKey="partID", OtherKey="partID")]
		public EntitySet<PartVideo> PartVideos
		{
			get
			{
				return this._PartVideos;
			}
			set
			{
				this._PartVideos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Part_ContentBridge", Storage="_ContentBridges", ThisKey="partID", OtherKey="partID")]
		public EntitySet<ContentBridge> ContentBridges
		{
			get
			{
				return this._ContentBridges;
			}
			set
			{
				this._ContentBridges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Part_PartPackage", Storage="_PartPackages", ThisKey="partID", OtherKey="partID")]
		public EntitySet<PartPackage> PartPackages
		{
			get
			{
				return this._PartPackages;
			}
			set
			{
				this._PartPackages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CatParts(CatPart entity)
		{
			this.SendPropertyChanging();
			entity.Part = this;
		}
		
		private void detach_CatParts(CatPart entity)
		{
			this.SendPropertyChanging();
			entity.Part = null;
		}
		
		private void attach_PartAttributes(PartAttribute entity)
		{
			this.SendPropertyChanging();
			entity.Part = this;
		}
		
		private void detach_PartAttributes(PartAttribute entity)
		{
			this.SendPropertyChanging();
			entity.Part = null;
		}
		
		private void attach_Prices(Price entity)
		{
			this.SendPropertyChanging();
			entity.Part = this;
		}
		
		private void detach_Prices(Price entity)
		{
			this.SendPropertyChanging();
			entity.Part = null;
		}
		
		private void attach_Reviews(Review entity)
		{
			this.SendPropertyChanging();
			entity.Part = this;
		}
		
		private void detach_Reviews(Review entity)
		{
			this.SendPropertyChanging();
			entity.Part = null;
		}
		
		private void attach_PartImages(PartImage entity)
		{
			this.SendPropertyChanging();
			entity.Part = this;
		}
		
		private void detach_PartImages(PartImage entity)
		{
			this.SendPropertyChanging();
			entity.Part = null;
		}
		
		private void attach_VehicleParts(VehiclePart entity)
		{
			this.SendPropertyChanging();
			entity.Part = this;
		}
		
		private void detach_VehicleParts(VehiclePart entity)
		{
			this.SendPropertyChanging();
			entity.Part = null;
		}
		
		private void attach_RelatedParts(RelatedPart entity)
		{
			this.SendPropertyChanging();
			entity.Part = this;
		}
		
		private void detach_RelatedParts(RelatedPart entity)
		{
			this.SendPropertyChanging();
			entity.Part = null;
		}
		
		private void attach_PartVideos(PartVideo entity)
		{
			this.SendPropertyChanging();
			entity.Part = this;
		}
		
		private void detach_PartVideos(PartVideo entity)
		{
			this.SendPropertyChanging();
			entity.Part = null;
		}
		
		private void attach_ContentBridges(ContentBridge entity)
		{
			this.SendPropertyChanging();
			entity.Part = this;
		}
		
		private void detach_ContentBridges(ContentBridge entity)
		{
			this.SendPropertyChanging();
			entity.Part = null;
		}
		
		private void attach_PartPackages(PartPackage entity)
		{
			this.SendPropertyChanging();
			entity.Part = this;
		}
		
		private void detach_PartPackages(PartPackage entity)
		{
			this.SendPropertyChanging();
			entity.Part = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PartImageSizes")]
	public partial class PartImageSize : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _sizeID;
		
		private string _size;
		
		private string _dimensions;
		
		private EntitySet<PartImage> _PartImages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsizeIDChanging(int value);
    partial void OnsizeIDChanged();
    partial void OnsizeChanging(string value);
    partial void OnsizeChanged();
    partial void OndimensionsChanging(string value);
    partial void OndimensionsChanged();
    #endregion
		
		public PartImageSize()
		{
			this._PartImages = new EntitySet<PartImage>(new Action<PartImage>(this.attach_PartImages), new Action<PartImage>(this.detach_PartImages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sizeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int sizeID
		{
			get
			{
				return this._sizeID;
			}
			set
			{
				if ((this._sizeID != value))
				{
					this.OnsizeIDChanging(value);
					this.SendPropertyChanging();
					this._sizeID = value;
					this.SendPropertyChanged("sizeID");
					this.OnsizeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_size", DbType="VarChar(25)")]
		public string size
		{
			get
			{
				return this._size;
			}
			set
			{
				if ((this._size != value))
				{
					this.OnsizeChanging(value);
					this.SendPropertyChanging();
					this._size = value;
					this.SendPropertyChanged("size");
					this.OnsizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dimensions", DbType="VarChar(20)")]
		public string dimensions
		{
			get
			{
				return this._dimensions;
			}
			set
			{
				if ((this._dimensions != value))
				{
					this.OndimensionsChanging(value);
					this.SendPropertyChanging();
					this._dimensions = value;
					this.SendPropertyChanged("dimensions");
					this.OndimensionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PartImageSize_PartImage", Storage="_PartImages", ThisKey="sizeID", OtherKey="sizeID")]
		public EntitySet<PartImage> PartImages
		{
			get
			{
				return this._PartImages;
			}
			set
			{
				this._PartImages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PartImages(PartImage entity)
		{
			this.SendPropertyChanging();
			entity.PartImageSize = this;
		}
		
		private void detach_PartImages(PartImage entity)
		{
			this.SendPropertyChanging();
			entity.PartImageSize = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RelatedType")]
	public partial class RelatedType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _rTypeID;
		
		private string _type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnrTypeIDChanging(int value);
    partial void OnrTypeIDChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    #endregion
		
		public RelatedType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int rTypeID
		{
			get
			{
				return this._rTypeID;
			}
			set
			{
				if ((this._rTypeID != value))
				{
					this.OnrTypeIDChanging(value);
					this.SendPropertyChanging();
					this._rTypeID = value;
					this.SendPropertyChanged("rTypeID");
					this.OnrTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(255)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VehiclePartAttribute")]
	public partial class VehiclePartAttribute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _vpAttrID;
		
		private int _vPartID;
		
		private string _value;
		
		private string _field;
		
		private int _sort;
		
		private EntityRef<VehiclePart> _VehiclePart;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnvpAttrIDChanging(int value);
    partial void OnvpAttrIDChanged();
    partial void OnvPartIDChanging(int value);
    partial void OnvPartIDChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    partial void OnfieldChanging(string value);
    partial void OnfieldChanged();
    partial void OnsortChanging(int value);
    partial void OnsortChanged();
    #endregion
		
		public VehiclePartAttribute()
		{
			this._VehiclePart = default(EntityRef<VehiclePart>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vpAttrID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int vpAttrID
		{
			get
			{
				return this._vpAttrID;
			}
			set
			{
				if ((this._vpAttrID != value))
				{
					this.OnvpAttrIDChanging(value);
					this.SendPropertyChanging();
					this._vpAttrID = value;
					this.SendPropertyChanged("vpAttrID");
					this.OnvpAttrIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vPartID", DbType="Int NOT NULL")]
		public int vPartID
		{
			get
			{
				return this._vPartID;
			}
			set
			{
				if ((this._vPartID != value))
				{
					if (this._VehiclePart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnvPartIDChanging(value);
					this.SendPropertyChanging();
					this._vPartID = value;
					this.SendPropertyChanged("vPartID");
					this.OnvPartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="VarChar(255)")]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_field", DbType="VarChar(255)")]
		public string field
		{
			get
			{
				return this._field;
			}
			set
			{
				if ((this._field != value))
				{
					this.OnfieldChanging(value);
					this.SendPropertyChanging();
					this._field = value;
					this.SendPropertyChanged("field");
					this.OnfieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort", DbType="Int NOT NULL")]
		public int sort
		{
			get
			{
				return this._sort;
			}
			set
			{
				if ((this._sort != value))
				{
					this.OnsortChanging(value);
					this.SendPropertyChanging();
					this._sort = value;
					this.SendPropertyChanged("sort");
					this.OnsortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VehiclePart_VehiclePartAttribute", Storage="_VehiclePart", ThisKey="vPartID", OtherKey="vPartID", IsForeignKey=true)]
		public VehiclePart VehiclePart
		{
			get
			{
				return this._VehiclePart.Entity;
			}
			set
			{
				VehiclePart previousValue = this._VehiclePart.Entity;
				if (((previousValue != value) 
							|| (this._VehiclePart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VehiclePart.Entity = null;
						previousValue.VehiclePartAttributes.Remove(this);
					}
					this._VehiclePart.Entity = value;
					if ((value != null))
					{
						value.VehiclePartAttributes.Add(this);
						this._vPartID = value.vPartID;
					}
					else
					{
						this._vPartID = default(int);
					}
					this.SendPropertyChanged("VehiclePart");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.States")]
	public partial class PartState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _stateID;
		
		private string _state1;
		
		private string _abbr;
		
		private int _countryID;
		
		private EntityRef<CustomerLocation> _CustomerLocation;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnstateIDChanging(int value);
    partial void OnstateIDChanged();
    partial void Onstate1Changing(string value);
    partial void Onstate1Changed();
    partial void OnabbrChanging(string value);
    partial void OnabbrChanged();
    partial void OncountryIDChanging(int value);
    partial void OncountryIDChanged();
    #endregion
		
		public PartState()
		{
			this._CustomerLocation = default(EntityRef<CustomerLocation>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stateID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int stateID
		{
			get
			{
				return this._stateID;
			}
			set
			{
				if ((this._stateID != value))
				{
					if ((this._CustomerLocation.HasLoadedOrAssignedValue || this._Customer.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstateIDChanging(value);
					this.SendPropertyChanging();
					this._stateID = value;
					this.SendPropertyChanged("stateID");
					this.OnstateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="state", Storage="_state1", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string state1
		{
			get
			{
				return this._state1;
			}
			set
			{
				if ((this._state1 != value))
				{
					this.Onstate1Changing(value);
					this.SendPropertyChanging();
					this._state1 = value;
					this.SendPropertyChanged("state1");
					this.Onstate1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_abbr", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string abbr
		{
			get
			{
				return this._abbr;
			}
			set
			{
				if ((this._abbr != value))
				{
					this.OnabbrChanging(value);
					this.SendPropertyChanging();
					this._abbr = value;
					this.SendPropertyChanged("abbr");
					this.OnabbrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countryID", DbType="Int NOT NULL")]
		public int countryID
		{
			get
			{
				return this._countryID;
			}
			set
			{
				if ((this._countryID != value))
				{
					this.OncountryIDChanging(value);
					this.SendPropertyChanging();
					this._countryID = value;
					this.SendPropertyChanged("countryID");
					this.OncountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerLocation_PartState", Storage="_CustomerLocation", ThisKey="stateID", OtherKey="stateID", IsForeignKey=true)]
		public CustomerLocation CustomerLocation
		{
			get
			{
				return this._CustomerLocation.Entity;
			}
			set
			{
				CustomerLocation previousValue = this._CustomerLocation.Entity;
				if (((previousValue != value) 
							|| (this._CustomerLocation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerLocation.Entity = null;
						previousValue.PartStates.Remove(this);
					}
					this._CustomerLocation.Entity = value;
					if ((value != null))
					{
						value.PartStates.Add(this);
						this._stateID = value.stateID;
					}
					else
					{
						this._stateID = default(int);
					}
					this.SendPropertyChanged("CustomerLocation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_PartState", Storage="_Customer", ThisKey="stateID", OtherKey="stateID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.PartStates.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.PartStates.Add(this);
						this._stateID = value.stateID;
					}
					else
					{
						this._stateID = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Trailer")]
	public partial class Trailer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _trailerID;
		
		private string _image;
		
		private string _name;
		
		private System.Nullable<int> _TW;
		
		private System.Nullable<int> _GTW;
		
		private string _hitchClass;
		
		private string _shortDesc;
		
		private string _message;
		
		private EntitySet<Lifestyle_Trailer> _Lifestyle_Trailers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntrailerIDChanging(int value);
    partial void OntrailerIDChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnTWChanging(System.Nullable<int> value);
    partial void OnTWChanged();
    partial void OnGTWChanging(System.Nullable<int> value);
    partial void OnGTWChanged();
    partial void OnhitchClassChanging(string value);
    partial void OnhitchClassChanged();
    partial void OnshortDescChanging(string value);
    partial void OnshortDescChanged();
    partial void OnmessageChanging(string value);
    partial void OnmessageChanged();
    #endregion
		
		public Trailer()
		{
			this._Lifestyle_Trailers = new EntitySet<Lifestyle_Trailer>(new Action<Lifestyle_Trailer>(this.attach_Lifestyle_Trailers), new Action<Lifestyle_Trailer>(this.detach_Lifestyle_Trailers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trailerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int trailerID
		{
			get
			{
				return this._trailerID;
			}
			set
			{
				if ((this._trailerID != value))
				{
					this.OntrailerIDChanging(value);
					this.SendPropertyChanging();
					this._trailerID = value;
					this.SendPropertyChanged("trailerID");
					this.OntrailerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="VarChar(255)")]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(255)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TW", DbType="Int")]
		public System.Nullable<int> TW
		{
			get
			{
				return this._TW;
			}
			set
			{
				if ((this._TW != value))
				{
					this.OnTWChanging(value);
					this.SendPropertyChanging();
					this._TW = value;
					this.SendPropertyChanged("TW");
					this.OnTWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GTW", DbType="Int")]
		public System.Nullable<int> GTW
		{
			get
			{
				return this._GTW;
			}
			set
			{
				if ((this._GTW != value))
				{
					this.OnGTWChanging(value);
					this.SendPropertyChanging();
					this._GTW = value;
					this.SendPropertyChanged("GTW");
					this.OnGTWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hitchClass", DbType="VarChar(255)")]
		public string hitchClass
		{
			get
			{
				return this._hitchClass;
			}
			set
			{
				if ((this._hitchClass != value))
				{
					this.OnhitchClassChanging(value);
					this.SendPropertyChanging();
					this._hitchClass = value;
					this.SendPropertyChanged("hitchClass");
					this.OnhitchClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shortDesc", DbType="VarChar(1000)")]
		public string shortDesc
		{
			get
			{
				return this._shortDesc;
			}
			set
			{
				if ((this._shortDesc != value))
				{
					this.OnshortDescChanging(value);
					this.SendPropertyChanging();
					this._shortDesc = value;
					this.SendPropertyChanged("shortDesc");
					this.OnshortDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message", DbType="VarChar(1000)")]
		public string message
		{
			get
			{
				return this._message;
			}
			set
			{
				if ((this._message != value))
				{
					this.OnmessageChanging(value);
					this.SendPropertyChanging();
					this._message = value;
					this.SendPropertyChanged("message");
					this.OnmessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Trailer_Lifestyle_Trailer", Storage="_Lifestyle_Trailers", ThisKey="trailerID", OtherKey="trailerID")]
		public EntitySet<Lifestyle_Trailer> Lifestyle_Trailers
		{
			get
			{
				return this._Lifestyle_Trailers;
			}
			set
			{
				this._Lifestyle_Trailers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Lifestyle_Trailers(Lifestyle_Trailer entity)
		{
			this.SendPropertyChanging();
			entity.Trailer = this;
		}
		
		private void detach_Lifestyle_Trailers(Lifestyle_Trailer entity)
		{
			this.SendPropertyChanging();
			entity.Trailer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DealerTypes")]
	public partial class DealerType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _dealer_type;
		
		private string _type;
		
		private bool _online;
		
		private bool _show;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondealer_typeChanging(int value);
    partial void Ondealer_typeChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnonlineChanging(bool value);
    partial void OnonlineChanged();
    partial void OnshowChanging(bool value);
    partial void OnshowChanged();
    #endregion
		
		public DealerType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dealer_type", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int dealer_type
		{
			get
			{
				return this._dealer_type;
			}
			set
			{
				if ((this._dealer_type != value))
				{
					this.Ondealer_typeChanging(value);
					this.SendPropertyChanging();
					this._dealer_type = value;
					this.SendPropertyChanged("dealer_type");
					this.Ondealer_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(100)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_online", DbType="Bit NOT NULL")]
		public bool online
		{
			get
			{
				return this._online;
			}
			set
			{
				if ((this._online != value))
				{
					this.OnonlineChanging(value);
					this.SendPropertyChanging();
					this._online = value;
					this.SendPropertyChanged("online");
					this.OnonlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_show", DbType="Bit NOT NULL")]
		public bool show
		{
			get
			{
				return this._show;
			}
			set
			{
				if ((this._show != value))
				{
					this.OnshowChanging(value);
					this.SendPropertyChanging();
					this._show = value;
					this.SendPropertyChanged("show");
					this.OnshowChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerPricing")]
	public partial class CustomerPricing : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cust_price_id;
		
		private int _cust_id;
		
		private int _partID;
		
		private decimal _price;
		
		private int _isSale;
		
		private System.Nullable<System.DateTime> _sale_start;
		
		private System.Nullable<System.DateTime> _sale_end;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncust_price_idChanging(int value);
    partial void Oncust_price_idChanged();
    partial void Oncust_idChanging(int value);
    partial void Oncust_idChanged();
    partial void OnpartIDChanging(int value);
    partial void OnpartIDChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    partial void OnisSaleChanging(int value);
    partial void OnisSaleChanged();
    partial void Onsale_startChanging(System.Nullable<System.DateTime> value);
    partial void Onsale_startChanged();
    partial void Onsale_endChanging(System.Nullable<System.DateTime> value);
    partial void Onsale_endChanged();
    #endregion
		
		public CustomerPricing()
		{
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_price_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cust_price_id
		{
			get
			{
				return this._cust_price_id;
			}
			set
			{
				if ((this._cust_price_id != value))
				{
					this.Oncust_price_idChanging(value);
					this.SendPropertyChanging();
					this._cust_price_id = value;
					this.SendPropertyChanged("cust_price_id");
					this.Oncust_price_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_id", DbType="Int NOT NULL")]
		public int cust_id
		{
			get
			{
				return this._cust_id;
			}
			set
			{
				if ((this._cust_id != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncust_idChanging(value);
					this.SendPropertyChanging();
					this._cust_id = value;
					this.SendPropertyChanged("cust_id");
					this.Oncust_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partID", DbType="Int NOT NULL")]
		public int partID
		{
			get
			{
				return this._partID;
			}
			set
			{
				if ((this._partID != value))
				{
					this.OnpartIDChanging(value);
					this.SendPropertyChanging();
					this._partID = value;
					this.SendPropertyChanged("partID");
					this.OnpartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Money NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isSale", DbType="Int NOT NULL")]
		public int isSale
		{
			get
			{
				return this._isSale;
			}
			set
			{
				if ((this._isSale != value))
				{
					this.OnisSaleChanging(value);
					this.SendPropertyChanging();
					this._isSale = value;
					this.SendPropertyChanged("isSale");
					this.OnisSaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sale_start", DbType="Date")]
		public System.Nullable<System.DateTime> sale_start
		{
			get
			{
				return this._sale_start;
			}
			set
			{
				if ((this._sale_start != value))
				{
					this.Onsale_startChanging(value);
					this.SendPropertyChanging();
					this._sale_start = value;
					this.SendPropertyChanged("sale_start");
					this.Onsale_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sale_end", DbType="Date")]
		public System.Nullable<System.DateTime> sale_end
		{
			get
			{
				return this._sale_end;
			}
			set
			{
				if ((this._sale_end != value))
				{
					this.Onsale_endChanging(value);
					this.SendPropertyChanging();
					this._sale_end = value;
					this.SendPropertyChanged("sale_end");
					this.Onsale_endChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerPricing", Storage="_Customer", ThisKey="cust_id", OtherKey="cust_id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.CustomerPricings.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.CustomerPricings.Add(this);
						this._cust_id = value.cust_id;
					}
					else
					{
						this._cust_id = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Country")]
	public partial class Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _countryID;
		
		private string _name;
		
		private string _abbr;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncountryIDChanging(int value);
    partial void OncountryIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnabbrChanging(string value);
    partial void OnabbrChanged();
    #endregion
		
		public Country()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int countryID
		{
			get
			{
				return this._countryID;
			}
			set
			{
				if ((this._countryID != value))
				{
					this.OncountryIDChanging(value);
					this.SendPropertyChanging();
					this._countryID = value;
					this.SendPropertyChanged("countryID");
					this.OncountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(255)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_abbr", DbType="VarChar(10)")]
		public string abbr
		{
			get
			{
				return this._abbr;
			}
			set
			{
				if ((this._abbr != value))
				{
					this.OnabbrChanging(value);
					this.SendPropertyChanging();
					this._abbr = value;
					this.SendPropertyChanged("abbr");
					this.OnabbrChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Content")]
	public partial class Content : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _contentID;
		
		private string _text;
		
		private int _cTypeID;
		
		private EntitySet<ContentBridge> _ContentBridges;
		
		private EntityRef<ContentType> _ContentType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncontentIDChanging(int value);
    partial void OncontentIDChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    partial void OncTypeIDChanging(int value);
    partial void OncTypeIDChanged();
    #endregion
		
		public Content()
		{
			this._ContentBridges = new EntitySet<ContentBridge>(new Action<ContentBridge>(this.attach_ContentBridges), new Action<ContentBridge>(this.detach_ContentBridges));
			this._ContentType = default(EntityRef<ContentType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int contentID
		{
			get
			{
				return this._contentID;
			}
			set
			{
				if ((this._contentID != value))
				{
					this.OncontentIDChanging(value);
					this.SendPropertyChanging();
					this._contentID = value;
					this.SendPropertyChanged("contentID");
					this.OncontentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text", DbType="VarChar(MAX)")]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cTypeID", DbType="Int NOT NULL")]
		public int cTypeID
		{
			get
			{
				return this._cTypeID;
			}
			set
			{
				if ((this._cTypeID != value))
				{
					if (this._ContentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncTypeIDChanging(value);
					this.SendPropertyChanging();
					this._cTypeID = value;
					this.SendPropertyChanged("cTypeID");
					this.OncTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Content_ContentBridge", Storage="_ContentBridges", ThisKey="contentID", OtherKey="contentID")]
		internal EntitySet<ContentBridge> ContentBridges
		{
			get
			{
				return this._ContentBridges;
			}
			set
			{
				this._ContentBridges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentType_Content", Storage="_ContentType", ThisKey="cTypeID", OtherKey="cTypeID", IsForeignKey=true)]
		public ContentType ContentType
		{
			get
			{
				return this._ContentType.Entity;
			}
			set
			{
				ContentType previousValue = this._ContentType.Entity;
				if (((previousValue != value) 
							|| (this._ContentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContentType.Entity = null;
						previousValue.Contents.Remove(this);
					}
					this._ContentType.Entity = value;
					if ((value != null))
					{
						value.Contents.Add(this);
						this._cTypeID = value.cTypeID;
					}
					else
					{
						this._cTypeID = default(int);
					}
					this.SendPropertyChanged("ContentType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContentBridges(ContentBridge entity)
		{
			this.SendPropertyChanging();
			entity.Content = this;
		}
		
		private void detach_ContentBridges(ContentBridge entity)
		{
			this.SendPropertyChanging();
			entity.Content = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ColorCode")]
	public partial class ColorCode
	{
		
		private int _codeID;
		
		private string _code;
		
		private string _font;
		
		public ColorCode()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codeID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int codeID
		{
			get
			{
				return this._codeID;
			}
			set
			{
				if ((this._codeID != value))
				{
					this._codeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(100)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this._code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_font", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string font
		{
			get
			{
				return this._font;
			}
			set
			{
				if ((this._font != value))
				{
					this._font = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CartIntegration")]
	public partial class CartIntegration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _referenceID;
		
		private int _partID;
		
		private int _custPartID;
		
		private int _custID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnreferenceIDChanging(int value);
    partial void OnreferenceIDChanged();
    partial void OnpartIDChanging(int value);
    partial void OnpartIDChanged();
    partial void OncustPartIDChanging(int value);
    partial void OncustPartIDChanged();
    partial void OncustIDChanging(int value);
    partial void OncustIDChanged();
    #endregion
		
		public CartIntegration()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_referenceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int referenceID
		{
			get
			{
				return this._referenceID;
			}
			set
			{
				if ((this._referenceID != value))
				{
					this.OnreferenceIDChanging(value);
					this.SendPropertyChanging();
					this._referenceID = value;
					this.SendPropertyChanged("referenceID");
					this.OnreferenceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partID", DbType="Int NOT NULL")]
		public int partID
		{
			get
			{
				return this._partID;
			}
			set
			{
				if ((this._partID != value))
				{
					this.OnpartIDChanging(value);
					this.SendPropertyChanging();
					this._partID = value;
					this.SendPropertyChanged("partID");
					this.OnpartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_custPartID", DbType="Int NOT NULL")]
		public int custPartID
		{
			get
			{
				return this._custPartID;
			}
			set
			{
				if ((this._custPartID != value))
				{
					this.OncustPartIDChanging(value);
					this.SendPropertyChanging();
					this._custPartID = value;
					this.SendPropertyChanged("custPartID");
					this.OncustPartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_custID", DbType="Int NOT NULL")]
		public int custID
		{
			get
			{
				return this._custID;
			}
			set
			{
				if ((this._custID != value))
				{
					this.OncustIDChanging(value);
					this.SendPropertyChanging();
					this._custID = value;
					this.SendPropertyChanged("custID");
					this.OncustIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WidgetDeployments")]
	public partial class WidgetDeployment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _trackerID;
		
		private string _url;
		
		private System.DateTime _date_added;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntrackerIDChanging(int value);
    partial void OntrackerIDChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void Ondate_addedChanging(System.DateTime value);
    partial void Ondate_addedChanged();
    #endregion
		
		public WidgetDeployment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trackerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int trackerID
		{
			get
			{
				return this._trackerID;
			}
			set
			{
				if ((this._trackerID != value))
				{
					this.OntrackerIDChanging(value);
					this.SendPropertyChanging();
					this._trackerID = value;
					this.SendPropertyChanged("trackerID");
					this.OntrackerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="VarChar(400) NOT NULL", CanBeNull=false)]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_added", DbType="DateTime NOT NULL")]
		public System.DateTime date_added
		{
			get
			{
				return this._date_added;
			}
			set
			{
				if ((this._date_added != value))
				{
					this.Ondate_addedChanging(value);
					this.SendPropertyChanging();
					this._date_added = value;
					this.SendPropertyChanged("date_added");
					this.Ondate_addedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PartIndex")]
	public partial class PartIndex : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _partIndexID;
		
		private int _partID;
		
		private string _partIndex1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpartIndexIDChanging(long value);
    partial void OnpartIndexIDChanged();
    partial void OnpartIDChanging(int value);
    partial void OnpartIDChanged();
    partial void OnpartIndex1Changing(string value);
    partial void OnpartIndex1Changed();
    #endregion
		
		public PartIndex()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partIndexID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long partIndexID
		{
			get
			{
				return this._partIndexID;
			}
			set
			{
				if ((this._partIndexID != value))
				{
					this.OnpartIndexIDChanging(value);
					this.SendPropertyChanging();
					this._partIndexID = value;
					this.SendPropertyChanged("partIndexID");
					this.OnpartIndexIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partID", DbType="Int NOT NULL")]
		public int partID
		{
			get
			{
				return this._partID;
			}
			set
			{
				if ((this._partID != value))
				{
					this.OnpartIDChanging(value);
					this.SendPropertyChanging();
					this._partID = value;
					this.SendPropertyChanged("partID");
					this.OnpartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="partIndex", Storage="_partIndex1", DbType="VarChar(MAX)")]
		public string partIndex1
		{
			get
			{
				return this._partIndex1;
			}
			set
			{
				if ((this._partIndex1 != value))
				{
					this.OnpartIndex1Changing(value);
					this.SendPropertyChanging();
					this._partIndex1 = value;
					this.SendPropertyChanged("partIndex1");
					this.OnpartIndex1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerLocations")]
	public partial class CustomerLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _locationID;
		
		private string _name;
		
		private string _address;
		
		private string _city;
		
		private int _stateID;
		
		private string _email;
		
		private string _phone;
		
		private string _fax;
		
		private double _latitude;
		
		private double _longitude;
		
		private int _cust_id;
		
		private string _contact_person;
		
		private bool _isprimary;
		
		private string _postalCode;
		
		private EntitySet<PartState> _PartStates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnlocationIDChanging(int value);
    partial void OnlocationIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnstateIDChanging(int value);
    partial void OnstateIDChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnfaxChanging(string value);
    partial void OnfaxChanged();
    partial void OnlatitudeChanging(double value);
    partial void OnlatitudeChanged();
    partial void OnlongitudeChanging(double value);
    partial void OnlongitudeChanged();
    partial void Oncust_idChanging(int value);
    partial void Oncust_idChanged();
    partial void Oncontact_personChanging(string value);
    partial void Oncontact_personChanged();
    partial void OnisprimaryChanging(bool value);
    partial void OnisprimaryChanged();
    partial void OnpostalCodeChanging(string value);
    partial void OnpostalCodeChanged();
    #endregion
		
		public CustomerLocation()
		{
			this._PartStates = new EntitySet<PartState>(new Action<PartState>(this.attach_PartStates), new Action<PartState>(this.detach_PartStates));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int locationID
		{
			get
			{
				return this._locationID;
			}
			set
			{
				if ((this._locationID != value))
				{
					this.OnlocationIDChanging(value);
					this.SendPropertyChanging();
					this._locationID = value;
					this.SendPropertyChanged("locationID");
					this.OnlocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(500)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(500)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(500)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stateID", DbType="Int NOT NULL")]
		public int stateID
		{
			get
			{
				return this._stateID;
			}
			set
			{
				if ((this._stateID != value))
				{
					this.OnstateIDChanging(value);
					this.SendPropertyChanging();
					this._stateID = value;
					this.SendPropertyChanged("stateID");
					this.OnstateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(500)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(20)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fax", DbType="VarChar(20)")]
		public string fax
		{
			get
			{
				return this._fax;
			}
			set
			{
				if ((this._fax != value))
				{
					this.OnfaxChanging(value);
					this.SendPropertyChanging();
					this._fax = value;
					this.SendPropertyChanged("fax");
					this.OnfaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_latitude", DbType="Float NOT NULL")]
		public double latitude
		{
			get
			{
				return this._latitude;
			}
			set
			{
				if ((this._latitude != value))
				{
					this.OnlatitudeChanging(value);
					this.SendPropertyChanging();
					this._latitude = value;
					this.SendPropertyChanged("latitude");
					this.OnlatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_longitude", DbType="Float NOT NULL")]
		public double longitude
		{
			get
			{
				return this._longitude;
			}
			set
			{
				if ((this._longitude != value))
				{
					this.OnlongitudeChanging(value);
					this.SendPropertyChanging();
					this._longitude = value;
					this.SendPropertyChanged("longitude");
					this.OnlongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_id", DbType="Int NOT NULL")]
		public int cust_id
		{
			get
			{
				return this._cust_id;
			}
			set
			{
				if ((this._cust_id != value))
				{
					this.Oncust_idChanging(value);
					this.SendPropertyChanging();
					this._cust_id = value;
					this.SendPropertyChanged("cust_id");
					this.Oncust_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact_person", DbType="VarChar(300)")]
		public string contact_person
		{
			get
			{
				return this._contact_person;
			}
			set
			{
				if ((this._contact_person != value))
				{
					this.Oncontact_personChanging(value);
					this.SendPropertyChanging();
					this._contact_person = value;
					this.SendPropertyChanged("contact_person");
					this.Oncontact_personChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isprimary", DbType="Bit NOT NULL")]
		public bool isprimary
		{
			get
			{
				return this._isprimary;
			}
			set
			{
				if ((this._isprimary != value))
				{
					this.OnisprimaryChanging(value);
					this.SendPropertyChanging();
					this._isprimary = value;
					this.SendPropertyChanged("isprimary");
					this.OnisprimaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postalCode", DbType="VarChar(30)")]
		public string postalCode
		{
			get
			{
				return this._postalCode;
			}
			set
			{
				if ((this._postalCode != value))
				{
					this.OnpostalCodeChanging(value);
					this.SendPropertyChanging();
					this._postalCode = value;
					this.SendPropertyChanged("postalCode");
					this.OnpostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerLocation_PartState", Storage="_PartStates", ThisKey="stateID", OtherKey="stateID")]
		public EntitySet<PartState> PartStates
		{
			get
			{
				return this._PartStates;
			}
			set
			{
				this._PartStates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PartStates(PartState entity)
		{
			this.SendPropertyChanging();
			entity.CustomerLocation = this;
		}
		
		private void detach_PartStates(PartState entity)
		{
			this.SendPropertyChanging();
			entity.CustomerLocation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[File]")]
	public partial class File : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _fileID;
		
		private string _name;
		
		private string _path;
		
		private int _height;
		
		private int _width;
		
		private System.DateTime _createdDate;
		
		private int _fileGalleryID;
		
		private int _fileExtID;
		
		private int _size;
		
		private EntityRef<FileExt> _FileExt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfileIDChanging(int value);
    partial void OnfileIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpathChanging(string value);
    partial void OnpathChanged();
    partial void OnheightChanging(int value);
    partial void OnheightChanged();
    partial void OnwidthChanging(int value);
    partial void OnwidthChanged();
    partial void OncreatedDateChanging(System.DateTime value);
    partial void OncreatedDateChanged();
    partial void OnfileGalleryIDChanging(int value);
    partial void OnfileGalleryIDChanged();
    partial void OnfileExtIDChanging(int value);
    partial void OnfileExtIDChanged();
    partial void OnsizeChanging(int value);
    partial void OnsizeChanged();
    #endregion
		
		public File()
		{
			this._FileExt = default(EntityRef<FileExt>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fileID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int fileID
		{
			get
			{
				return this._fileID;
			}
			set
			{
				if ((this._fileID != value))
				{
					this.OnfileIDChanging(value);
					this.SendPropertyChanging();
					this._fileID = value;
					this.SendPropertyChanged("fileID");
					this.OnfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_path", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string path
		{
			get
			{
				return this._path;
			}
			set
			{
				if ((this._path != value))
				{
					this.OnpathChanging(value);
					this.SendPropertyChanging();
					this._path = value;
					this.SendPropertyChanged("path");
					this.OnpathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_height", DbType="Int NOT NULL")]
		public int height
		{
			get
			{
				return this._height;
			}
			set
			{
				if ((this._height != value))
				{
					this.OnheightChanging(value);
					this.SendPropertyChanging();
					this._height = value;
					this.SendPropertyChanged("height");
					this.OnheightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_width", DbType="Int NOT NULL")]
		public int width
		{
			get
			{
				return this._width;
			}
			set
			{
				if ((this._width != value))
				{
					this.OnwidthChanging(value);
					this.SendPropertyChanging();
					this._width = value;
					this.SendPropertyChanged("width");
					this.OnwidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdDate", DbType="DateTime NOT NULL")]
		public System.DateTime createdDate
		{
			get
			{
				return this._createdDate;
			}
			set
			{
				if ((this._createdDate != value))
				{
					this.OncreatedDateChanging(value);
					this.SendPropertyChanging();
					this._createdDate = value;
					this.SendPropertyChanged("createdDate");
					this.OncreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fileGalleryID", DbType="Int NOT NULL")]
		public int fileGalleryID
		{
			get
			{
				return this._fileGalleryID;
			}
			set
			{
				if ((this._fileGalleryID != value))
				{
					this.OnfileGalleryIDChanging(value);
					this.SendPropertyChanging();
					this._fileGalleryID = value;
					this.SendPropertyChanged("fileGalleryID");
					this.OnfileGalleryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fileExtID", DbType="Int NOT NULL")]
		public int fileExtID
		{
			get
			{
				return this._fileExtID;
			}
			set
			{
				if ((this._fileExtID != value))
				{
					if (this._FileExt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfileExtIDChanging(value);
					this.SendPropertyChanging();
					this._fileExtID = value;
					this.SendPropertyChanged("fileExtID");
					this.OnfileExtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_size", DbType="Int NOT NULL")]
		public int size
		{
			get
			{
				return this._size;
			}
			set
			{
				if ((this._size != value))
				{
					this.OnsizeChanging(value);
					this.SendPropertyChanging();
					this._size = value;
					this.SendPropertyChanged("size");
					this.OnsizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FileExt_File", Storage="_FileExt", ThisKey="fileExtID", OtherKey="fileExtID", IsForeignKey=true)]
		public FileExt FileExt
		{
			get
			{
				return this._FileExt.Entity;
			}
			set
			{
				FileExt previousValue = this._FileExt.Entity;
				if (((previousValue != value) 
							|| (this._FileExt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FileExt.Entity = null;
						previousValue.Files.Remove(this);
					}
					this._FileExt.Entity = value;
					if ((value != null))
					{
						value.Files.Add(this);
						this._fileExtID = value.fileExtID;
					}
					else
					{
						this._fileExtID = default(int);
					}
					this.SendPropertyChanged("FileExt");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FileExt")]
	public partial class FileExt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _fileExtID;
		
		private string _fileExt1;
		
		private string _fileExtIcon;
		
		private int _fileTypeID;
		
		private EntitySet<File> _Files;
		
		private EntityRef<FileType> _FileType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfileExtIDChanging(int value);
    partial void OnfileExtIDChanged();
    partial void OnfileExt1Changing(string value);
    partial void OnfileExt1Changed();
    partial void OnfileExtIconChanging(string value);
    partial void OnfileExtIconChanged();
    partial void OnfileTypeIDChanging(int value);
    partial void OnfileTypeIDChanged();
    #endregion
		
		public FileExt()
		{
			this._Files = new EntitySet<File>(new Action<File>(this.attach_Files), new Action<File>(this.detach_Files));
			this._FileType = default(EntityRef<FileType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fileExtID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int fileExtID
		{
			get
			{
				return this._fileExtID;
			}
			set
			{
				if ((this._fileExtID != value))
				{
					this.OnfileExtIDChanging(value);
					this.SendPropertyChanging();
					this._fileExtID = value;
					this.SendPropertyChanged("fileExtID");
					this.OnfileExtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fileExt", Storage="_fileExt1", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string fileExt1
		{
			get
			{
				return this._fileExt1;
			}
			set
			{
				if ((this._fileExt1 != value))
				{
					this.OnfileExt1Changing(value);
					this.SendPropertyChanging();
					this._fileExt1 = value;
					this.SendPropertyChanged("fileExt1");
					this.OnfileExt1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fileExtIcon", DbType="VarChar(1000)")]
		public string fileExtIcon
		{
			get
			{
				return this._fileExtIcon;
			}
			set
			{
				if ((this._fileExtIcon != value))
				{
					this.OnfileExtIconChanging(value);
					this.SendPropertyChanging();
					this._fileExtIcon = value;
					this.SendPropertyChanged("fileExtIcon");
					this.OnfileExtIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fileTypeID", DbType="Int NOT NULL")]
		public int fileTypeID
		{
			get
			{
				return this._fileTypeID;
			}
			set
			{
				if ((this._fileTypeID != value))
				{
					if (this._FileType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfileTypeIDChanging(value);
					this.SendPropertyChanging();
					this._fileTypeID = value;
					this.SendPropertyChanged("fileTypeID");
					this.OnfileTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FileExt_File", Storage="_Files", ThisKey="fileExtID", OtherKey="fileExtID")]
		public EntitySet<File> Files
		{
			get
			{
				return this._Files;
			}
			set
			{
				this._Files.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FileType_FileExt", Storage="_FileType", ThisKey="fileTypeID", OtherKey="fileTypeID", IsForeignKey=true)]
		public FileType FileType
		{
			get
			{
				return this._FileType.Entity;
			}
			set
			{
				FileType previousValue = this._FileType.Entity;
				if (((previousValue != value) 
							|| (this._FileType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FileType.Entity = null;
						previousValue.FileExts.Remove(this);
					}
					this._FileType.Entity = value;
					if ((value != null))
					{
						value.FileExts.Add(this);
						this._fileTypeID = value.fileTypeID;
					}
					else
					{
						this._fileTypeID = default(int);
					}
					this.SendPropertyChanged("FileType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Files(File entity)
		{
			this.SendPropertyChanging();
			entity.FileExt = this;
		}
		
		private void detach_Files(File entity)
		{
			this.SendPropertyChanging();
			entity.FileExt = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FileType")]
	public partial class FileType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _fileTypeID;
		
		private string _fileType1;
		
		private EntitySet<FileExt> _FileExts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfileTypeIDChanging(int value);
    partial void OnfileTypeIDChanged();
    partial void OnfileType1Changing(string value);
    partial void OnfileType1Changed();
    #endregion
		
		public FileType()
		{
			this._FileExts = new EntitySet<FileExt>(new Action<FileExt>(this.attach_FileExts), new Action<FileExt>(this.detach_FileExts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fileTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int fileTypeID
		{
			get
			{
				return this._fileTypeID;
			}
			set
			{
				if ((this._fileTypeID != value))
				{
					this.OnfileTypeIDChanging(value);
					this.SendPropertyChanging();
					this._fileTypeID = value;
					this.SendPropertyChanged("fileTypeID");
					this.OnfileTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fileType", Storage="_fileType1", DbType="VarChar(500)")]
		public string fileType1
		{
			get
			{
				return this._fileType1;
			}
			set
			{
				if ((this._fileType1 != value))
				{
					this.OnfileType1Changing(value);
					this.SendPropertyChanging();
					this._fileType1 = value;
					this.SendPropertyChanged("fileType1");
					this.OnfileType1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FileType_FileExt", Storage="_FileExts", ThisKey="fileTypeID", OtherKey="fileTypeID")]
		public EntitySet<FileExt> FileExts
		{
			get
			{
				return this._FileExts;
			}
			set
			{
				this._FileExts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FileExts(FileExt entity)
		{
			this.SendPropertyChanging();
			entity.FileType = this;
		}
		
		private void detach_FileExts(FileExt entity)
		{
			this.SendPropertyChanging();
			entity.FileType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categories")]
	public partial class Categories : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _catID;
		
		private System.Nullable<System.DateTime> _dateAdded;
		
		private int _parentID;
		
		private string _catTitle;
		
		private string _shortDesc;
		
		private string _longDesc;
		
		private string _image;
		
		private int _isLifestyle;
		
		private int _codeID;
		
		private int _sort;
		
		private bool _vehicleSpecific;
		
		private EntitySet<Lifestyle_Trailer> _Lifestyle_Trailers;
		
		private EntitySet<ContentBridge> _ContentBridges;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncatIDChanging(int value);
    partial void OncatIDChanged();
    partial void OndateAddedChanging(System.Nullable<System.DateTime> value);
    partial void OndateAddedChanged();
    partial void OnparentIDChanging(int value);
    partial void OnparentIDChanged();
    partial void OncatTitleChanging(string value);
    partial void OncatTitleChanged();
    partial void OnshortDescChanging(string value);
    partial void OnshortDescChanged();
    partial void OnlongDescChanging(string value);
    partial void OnlongDescChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    partial void OnisLifestyleChanging(int value);
    partial void OnisLifestyleChanged();
    partial void OncodeIDChanging(int value);
    partial void OncodeIDChanged();
    partial void OnsortChanging(int value);
    partial void OnsortChanged();
    partial void OnvehicleSpecificChanging(bool value);
    partial void OnvehicleSpecificChanged();
    #endregion
		
		public Categories()
		{
			this._Lifestyle_Trailers = new EntitySet<Lifestyle_Trailer>(new Action<Lifestyle_Trailer>(this.attach_Lifestyle_Trailers), new Action<Lifestyle_Trailer>(this.detach_Lifestyle_Trailers));
			this._ContentBridges = new EntitySet<ContentBridge>(new Action<ContentBridge>(this.attach_ContentBridges), new Action<ContentBridge>(this.detach_ContentBridges));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_catID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int catID
		{
			get
			{
				return this._catID;
			}
			set
			{
				if ((this._catID != value))
				{
					this.OncatIDChanging(value);
					this.SendPropertyChanging();
					this._catID = value;
					this.SendPropertyChanged("catID");
					this.OncatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateAdded", DbType="DateTime")]
		public System.Nullable<System.DateTime> dateAdded
		{
			get
			{
				return this._dateAdded;
			}
			set
			{
				if ((this._dateAdded != value))
				{
					this.OndateAddedChanging(value);
					this.SendPropertyChanging();
					this._dateAdded = value;
					this.SendPropertyChanged("dateAdded");
					this.OndateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parentID", DbType="Int NOT NULL")]
		public int parentID
		{
			get
			{
				return this._parentID;
			}
			set
			{
				if ((this._parentID != value))
				{
					this.OnparentIDChanging(value);
					this.SendPropertyChanging();
					this._parentID = value;
					this.SendPropertyChanged("parentID");
					this.OnparentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_catTitle", DbType="VarChar(100)")]
		public string catTitle
		{
			get
			{
				return this._catTitle;
			}
			set
			{
				if ((this._catTitle != value))
				{
					this.OncatTitleChanging(value);
					this.SendPropertyChanging();
					this._catTitle = value;
					this.SendPropertyChanged("catTitle");
					this.OncatTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shortDesc", DbType="VarChar(255)")]
		public string shortDesc
		{
			get
			{
				return this._shortDesc;
			}
			set
			{
				if ((this._shortDesc != value))
				{
					this.OnshortDescChanging(value);
					this.SendPropertyChanging();
					this._shortDesc = value;
					this.SendPropertyChanged("shortDesc");
					this.OnshortDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_longDesc", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string longDesc
		{
			get
			{
				return this._longDesc;
			}
			set
			{
				if ((this._longDesc != value))
				{
					this.OnlongDescChanging(value);
					this.SendPropertyChanging();
					this._longDesc = value;
					this.SendPropertyChanged("longDesc");
					this.OnlongDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="VarChar(255)")]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isLifestyle", DbType="Int NOT NULL")]
		public int isLifestyle
		{
			get
			{
				return this._isLifestyle;
			}
			set
			{
				if ((this._isLifestyle != value))
				{
					this.OnisLifestyleChanging(value);
					this.SendPropertyChanging();
					this._isLifestyle = value;
					this.SendPropertyChanged("isLifestyle");
					this.OnisLifestyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codeID", DbType="Int NOT NULL")]
		public int codeID
		{
			get
			{
				return this._codeID;
			}
			set
			{
				if ((this._codeID != value))
				{
					this.OncodeIDChanging(value);
					this.SendPropertyChanging();
					this._codeID = value;
					this.SendPropertyChanged("codeID");
					this.OncodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort", DbType="Int NOT NULL")]
		public int sort
		{
			get
			{
				return this._sort;
			}
			set
			{
				if ((this._sort != value))
				{
					this.OnsortChanging(value);
					this.SendPropertyChanging();
					this._sort = value;
					this.SendPropertyChanged("sort");
					this.OnsortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicleSpecific", DbType="Bit NOT NULL")]
		public bool vehicleSpecific
		{
			get
			{
				return this._vehicleSpecific;
			}
			set
			{
				if ((this._vehicleSpecific != value))
				{
					this.OnvehicleSpecificChanging(value);
					this.SendPropertyChanging();
					this._vehicleSpecific = value;
					this.SendPropertyChanged("vehicleSpecific");
					this.OnvehicleSpecificChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categories_Lifestyle_Trailer", Storage="_Lifestyle_Trailers", ThisKey="catID", OtherKey="catID")]
		public EntitySet<Lifestyle_Trailer> Lifestyle_Trailers
		{
			get
			{
				return this._Lifestyle_Trailers;
			}
			set
			{
				this._Lifestyle_Trailers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categories_ContentBridge", Storage="_ContentBridges", ThisKey="catID", OtherKey="catID")]
		public EntitySet<ContentBridge> ContentBridges
		{
			get
			{
				return this._ContentBridges;
			}
			set
			{
				this._ContentBridges.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Lifestyle_Trailers(Lifestyle_Trailer entity)
		{
			this.SendPropertyChanging();
			entity.Categories = this;
		}
		
		private void detach_Lifestyle_Trailers(Lifestyle_Trailer entity)
		{
			this.SendPropertyChanging();
			entity.Categories = null;
		}
		
		private void attach_ContentBridges(ContentBridge entity)
		{
			this.SendPropertyChanging();
			entity.Categories = this;
		}
		
		private void detach_ContentBridges(ContentBridge entity)
		{
			this.SendPropertyChanging();
			entity.Categories = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatPart")]
	public partial class CatPart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _catPartID;
		
		private int _catID;
		
		private int _partID;
		
		private EntityRef<Part> _Part;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncatPartIDChanging(int value);
    partial void OncatPartIDChanged();
    partial void OncatIDChanging(int value);
    partial void OncatIDChanged();
    partial void OnpartIDChanging(int value);
    partial void OnpartIDChanged();
    #endregion
		
		public CatPart()
		{
			this._Part = default(EntityRef<Part>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_catPartID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int catPartID
		{
			get
			{
				return this._catPartID;
			}
			set
			{
				if ((this._catPartID != value))
				{
					this.OncatPartIDChanging(value);
					this.SendPropertyChanging();
					this._catPartID = value;
					this.SendPropertyChanged("catPartID");
					this.OncatPartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_catID", DbType="Int NOT NULL")]
		public int catID
		{
			get
			{
				return this._catID;
			}
			set
			{
				if ((this._catID != value))
				{
					this.OncatIDChanging(value);
					this.SendPropertyChanging();
					this._catID = value;
					this.SendPropertyChanged("catID");
					this.OncatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partID", DbType="Int NOT NULL")]
		public int partID
		{
			get
			{
				return this._partID;
			}
			set
			{
				if ((this._partID != value))
				{
					if (this._Part.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpartIDChanging(value);
					this.SendPropertyChanging();
					this._partID = value;
					this.SendPropertyChanged("partID");
					this.OnpartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Part_CatPart", Storage="_Part", ThisKey="partID", OtherKey="partID", IsForeignKey=true)]
		public Part Part
		{
			get
			{
				return this._Part.Entity;
			}
			set
			{
				Part previousValue = this._Part.Entity;
				if (((previousValue != value) 
							|| (this._Part.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Part.Entity = null;
						previousValue.CatParts.Remove(this);
					}
					this._Part.Entity = value;
					if ((value != null))
					{
						value.CatParts.Add(this);
						this._partID = value.partID;
					}
					else
					{
						this._partID = default(int);
					}
					this.SendPropertyChanged("Part");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MakeModel")]
	public partial class MakeModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _mmID;
		
		private int _makeID;
		
		private int _modelID;
		
		private EntityRef<Make> _Make;
		
		private EntityRef<Model> _Model;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmmIDChanging(int value);
    partial void OnmmIDChanged();
    partial void OnmakeIDChanging(int value);
    partial void OnmakeIDChanged();
    partial void OnmodelIDChanging(int value);
    partial void OnmodelIDChanged();
    #endregion
		
		public MakeModel()
		{
			this._Make = default(EntityRef<Make>);
			this._Model = default(EntityRef<Model>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mmID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int mmID
		{
			get
			{
				return this._mmID;
			}
			set
			{
				if ((this._mmID != value))
				{
					this.OnmmIDChanging(value);
					this.SendPropertyChanging();
					this._mmID = value;
					this.SendPropertyChanged("mmID");
					this.OnmmIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_makeID", DbType="Int NOT NULL")]
		public int makeID
		{
			get
			{
				return this._makeID;
			}
			set
			{
				if ((this._makeID != value))
				{
					if (this._Make.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmakeIDChanging(value);
					this.SendPropertyChanging();
					this._makeID = value;
					this.SendPropertyChanged("makeID");
					this.OnmakeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modelID", DbType="Int NOT NULL")]
		public int modelID
		{
			get
			{
				return this._modelID;
			}
			set
			{
				if ((this._modelID != value))
				{
					if (this._Model.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmodelIDChanging(value);
					this.SendPropertyChanging();
					this._modelID = value;
					this.SendPropertyChanged("modelID");
					this.OnmodelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Make_MakeModel", Storage="_Make", ThisKey="makeID", OtherKey="makeID", IsForeignKey=true)]
		public Make Make
		{
			get
			{
				return this._Make.Entity;
			}
			set
			{
				Make previousValue = this._Make.Entity;
				if (((previousValue != value) 
							|| (this._Make.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Make.Entity = null;
						previousValue.MakeModels.Remove(this);
					}
					this._Make.Entity = value;
					if ((value != null))
					{
						value.MakeModels.Add(this);
						this._makeID = value.makeID;
					}
					else
					{
						this._makeID = default(int);
					}
					this.SendPropertyChanged("Make");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Model_MakeModel", Storage="_Model", ThisKey="modelID", OtherKey="modelID", IsForeignKey=true)]
		public Model Model
		{
			get
			{
				return this._Model.Entity;
			}
			set
			{
				Model previousValue = this._Model.Entity;
				if (((previousValue != value) 
							|| (this._Model.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Model.Entity = null;
						previousValue.MakeModels.Remove(this);
					}
					this._Model.Entity = value;
					if ((value != null))
					{
						value.MakeModels.Add(this);
						this._modelID = value.modelID;
					}
					else
					{
						this._modelID = default(int);
					}
					this.SendPropertyChanged("Model");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ModelStyle")]
	public partial class ModelStyle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _msID;
		
		private int _modelID;
		
		private int _styleID;
		
		private EntityRef<Model> _Model;
		
		private EntityRef<Style> _Style;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmsIDChanging(int value);
    partial void OnmsIDChanged();
    partial void OnmodelIDChanging(int value);
    partial void OnmodelIDChanged();
    partial void OnstyleIDChanging(int value);
    partial void OnstyleIDChanged();
    #endregion
		
		public ModelStyle()
		{
			this._Model = default(EntityRef<Model>);
			this._Style = default(EntityRef<Style>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int msID
		{
			get
			{
				return this._msID;
			}
			set
			{
				if ((this._msID != value))
				{
					this.OnmsIDChanging(value);
					this.SendPropertyChanging();
					this._msID = value;
					this.SendPropertyChanged("msID");
					this.OnmsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modelID", DbType="Int NOT NULL")]
		public int modelID
		{
			get
			{
				return this._modelID;
			}
			set
			{
				if ((this._modelID != value))
				{
					if (this._Model.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmodelIDChanging(value);
					this.SendPropertyChanging();
					this._modelID = value;
					this.SendPropertyChanged("modelID");
					this.OnmodelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_styleID", DbType="Int NOT NULL")]
		public int styleID
		{
			get
			{
				return this._styleID;
			}
			set
			{
				if ((this._styleID != value))
				{
					if (this._Style.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstyleIDChanging(value);
					this.SendPropertyChanging();
					this._styleID = value;
					this.SendPropertyChanged("styleID");
					this.OnstyleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Model_ModelStyle", Storage="_Model", ThisKey="modelID", OtherKey="modelID", IsForeignKey=true)]
		public Model Model
		{
			get
			{
				return this._Model.Entity;
			}
			set
			{
				Model previousValue = this._Model.Entity;
				if (((previousValue != value) 
							|| (this._Model.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Model.Entity = null;
						previousValue.ModelStyles.Remove(this);
					}
					this._Model.Entity = value;
					if ((value != null))
					{
						value.ModelStyles.Add(this);
						this._modelID = value.modelID;
					}
					else
					{
						this._modelID = default(int);
					}
					this.SendPropertyChanged("Model");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Style_ModelStyle", Storage="_Style", ThisKey="styleID", OtherKey="styleID", IsForeignKey=true)]
		public Style Style
		{
			get
			{
				return this._Style.Entity;
			}
			set
			{
				Style previousValue = this._Style.Entity;
				if (((previousValue != value) 
							|| (this._Style.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Style.Entity = null;
						previousValue.ModelStyles.Remove(this);
					}
					this._Style.Entity = value;
					if ((value != null))
					{
						value.ModelStyles.Add(this);
						this._styleID = value.styleID;
					}
					else
					{
						this._styleID = default(int);
					}
					this.SendPropertyChanged("Style");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.YearMake")]
	public partial class YearMake : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ymID;
		
		private System.Nullable<int> _yearID;
		
		private int _makeID;
		
		private EntityRef<Make> _Make;
		
		private EntityRef<Year> _Year;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnymIDChanging(int value);
    partial void OnymIDChanged();
    partial void OnyearIDChanging(System.Nullable<int> value);
    partial void OnyearIDChanged();
    partial void OnmakeIDChanging(int value);
    partial void OnmakeIDChanged();
    #endregion
		
		public YearMake()
		{
			this._Make = default(EntityRef<Make>);
			this._Year = default(EntityRef<Year>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ymID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ymID
		{
			get
			{
				return this._ymID;
			}
			set
			{
				if ((this._ymID != value))
				{
					this.OnymIDChanging(value);
					this.SendPropertyChanging();
					this._ymID = value;
					this.SendPropertyChanged("ymID");
					this.OnymIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_yearID", DbType="Int")]
		public System.Nullable<int> yearID
		{
			get
			{
				return this._yearID;
			}
			set
			{
				if ((this._yearID != value))
				{
					if (this._Year.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnyearIDChanging(value);
					this.SendPropertyChanging();
					this._yearID = value;
					this.SendPropertyChanged("yearID");
					this.OnyearIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_makeID", DbType="Int NOT NULL")]
		public int makeID
		{
			get
			{
				return this._makeID;
			}
			set
			{
				if ((this._makeID != value))
				{
					if (this._Make.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmakeIDChanging(value);
					this.SendPropertyChanging();
					this._makeID = value;
					this.SendPropertyChanged("makeID");
					this.OnmakeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Make_YearMake", Storage="_Make", ThisKey="makeID", OtherKey="makeID", IsForeignKey=true)]
		public Make Make
		{
			get
			{
				return this._Make.Entity;
			}
			set
			{
				Make previousValue = this._Make.Entity;
				if (((previousValue != value) 
							|| (this._Make.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Make.Entity = null;
						previousValue.YearMakes.Remove(this);
					}
					this._Make.Entity = value;
					if ((value != null))
					{
						value.YearMakes.Add(this);
						this._makeID = value.makeID;
					}
					else
					{
						this._makeID = default(int);
					}
					this.SendPropertyChanged("Make");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Year_YearMake", Storage="_Year", ThisKey="yearID", OtherKey="yearID", IsForeignKey=true)]
		public Year Year
		{
			get
			{
				return this._Year.Entity;
			}
			set
			{
				Year previousValue = this._Year.Entity;
				if (((previousValue != value) 
							|| (this._Year.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Year.Entity = null;
						previousValue.YearMakes.Remove(this);
					}
					this._Year.Entity = value;
					if ((value != null))
					{
						value.YearMakes.Add(this);
						this._yearID = value.yearID;
					}
					else
					{
						this._yearID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Year");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PartAttribute")]
	public partial class PartAttribute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pAttrID;
		
		private int _partID;
		
		private string _value;
		
		private string _field;
		
		private int _sort;
		
		private EntityRef<Part> _Part;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpAttrIDChanging(int value);
    partial void OnpAttrIDChanged();
    partial void OnpartIDChanging(int value);
    partial void OnpartIDChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    partial void OnfieldChanging(string value);
    partial void OnfieldChanged();
    partial void OnsortChanging(int value);
    partial void OnsortChanged();
    #endregion
		
		public PartAttribute()
		{
			this._Part = default(EntityRef<Part>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pAttrID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pAttrID
		{
			get
			{
				return this._pAttrID;
			}
			set
			{
				if ((this._pAttrID != value))
				{
					this.OnpAttrIDChanging(value);
					this.SendPropertyChanging();
					this._pAttrID = value;
					this.SendPropertyChanged("pAttrID");
					this.OnpAttrIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partID", DbType="Int NOT NULL")]
		public int partID
		{
			get
			{
				return this._partID;
			}
			set
			{
				if ((this._partID != value))
				{
					if (this._Part.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpartIDChanging(value);
					this.SendPropertyChanging();
					this._partID = value;
					this.SendPropertyChanged("partID");
					this.OnpartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="VarChar(255)")]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_field", DbType="VarChar(255)")]
		public string field
		{
			get
			{
				return this._field;
			}
			set
			{
				if ((this._field != value))
				{
					this.OnfieldChanging(value);
					this.SendPropertyChanging();
					this._field = value;
					this.SendPropertyChanged("field");
					this.OnfieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort", DbType="Int NOT NULL")]
		public int sort
		{
			get
			{
				return this._sort;
			}
			set
			{
				if ((this._sort != value))
				{
					this.OnsortChanging(value);
					this.SendPropertyChanging();
					this._sort = value;
					this.SendPropertyChanged("sort");
					this.OnsortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Part_PartAttribute", Storage="_Part", ThisKey="partID", OtherKey="partID", IsForeignKey=true)]
		public Part Part
		{
			get
			{
				return this._Part.Entity;
			}
			set
			{
				Part previousValue = this._Part.Entity;
				if (((previousValue != value) 
							|| (this._Part.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Part.Entity = null;
						previousValue.PartAttributes.Remove(this);
					}
					this._Part.Entity = value;
					if ((value != null))
					{
						value.PartAttributes.Add(this);
						this._partID = value.partID;
					}
					else
					{
						this._partID = default(int);
					}
					this.SendPropertyChanged("Part");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vehicle")]
	public partial class Vehicle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _vehicleID;
		
		private int _yearID;
		
		private int _makeID;
		
		private int _modelID;
		
		private int _styleID;
		
		private System.DateTime _dateAdded;
		
		private EntitySet<VehiclePart> _VehicleParts;
		
		private EntityRef<Make> _Make;
		
		private EntityRef<Model> _Model;
		
		private EntityRef<Style> _Style;
		
		private EntityRef<Year> _Year;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnvehicleIDChanging(int value);
    partial void OnvehicleIDChanged();
    partial void OnyearIDChanging(int value);
    partial void OnyearIDChanged();
    partial void OnmakeIDChanging(int value);
    partial void OnmakeIDChanged();
    partial void OnmodelIDChanging(int value);
    partial void OnmodelIDChanged();
    partial void OnstyleIDChanging(int value);
    partial void OnstyleIDChanged();
    partial void OndateAddedChanging(System.DateTime value);
    partial void OndateAddedChanged();
    #endregion
		
		public Vehicle()
		{
			this._VehicleParts = new EntitySet<VehiclePart>(new Action<VehiclePart>(this.attach_VehicleParts), new Action<VehiclePart>(this.detach_VehicleParts));
			this._Make = default(EntityRef<Make>);
			this._Model = default(EntityRef<Model>);
			this._Style = default(EntityRef<Style>);
			this._Year = default(EntityRef<Year>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int vehicleID
		{
			get
			{
				return this._vehicleID;
			}
			set
			{
				if ((this._vehicleID != value))
				{
					this.OnvehicleIDChanging(value);
					this.SendPropertyChanging();
					this._vehicleID = value;
					this.SendPropertyChanged("vehicleID");
					this.OnvehicleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_yearID", DbType="Int NOT NULL")]
		public int yearID
		{
			get
			{
				return this._yearID;
			}
			set
			{
				if ((this._yearID != value))
				{
					if (this._Year.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnyearIDChanging(value);
					this.SendPropertyChanging();
					this._yearID = value;
					this.SendPropertyChanged("yearID");
					this.OnyearIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_makeID", DbType="Int NOT NULL")]
		public int makeID
		{
			get
			{
				return this._makeID;
			}
			set
			{
				if ((this._makeID != value))
				{
					if (this._Make.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmakeIDChanging(value);
					this.SendPropertyChanging();
					this._makeID = value;
					this.SendPropertyChanged("makeID");
					this.OnmakeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modelID", DbType="Int NOT NULL")]
		public int modelID
		{
			get
			{
				return this._modelID;
			}
			set
			{
				if ((this._modelID != value))
				{
					if (this._Model.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmodelIDChanging(value);
					this.SendPropertyChanging();
					this._modelID = value;
					this.SendPropertyChanged("modelID");
					this.OnmodelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_styleID", DbType="Int NOT NULL")]
		public int styleID
		{
			get
			{
				return this._styleID;
			}
			set
			{
				if ((this._styleID != value))
				{
					if (this._Style.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstyleIDChanging(value);
					this.SendPropertyChanging();
					this._styleID = value;
					this.SendPropertyChanged("styleID");
					this.OnstyleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateAdded", DbType="DateTime NOT NULL")]
		public System.DateTime dateAdded
		{
			get
			{
				return this._dateAdded;
			}
			set
			{
				if ((this._dateAdded != value))
				{
					this.OndateAddedChanging(value);
					this.SendPropertyChanging();
					this._dateAdded = value;
					this.SendPropertyChanged("dateAdded");
					this.OndateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_VehiclePart", Storage="_VehicleParts", ThisKey="vehicleID", OtherKey="vehicleID")]
		public EntitySet<VehiclePart> VehicleParts
		{
			get
			{
				return this._VehicleParts;
			}
			set
			{
				this._VehicleParts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Make_Vehicle", Storage="_Make", ThisKey="makeID", OtherKey="makeID", IsForeignKey=true)]
		public Make Make
		{
			get
			{
				return this._Make.Entity;
			}
			set
			{
				Make previousValue = this._Make.Entity;
				if (((previousValue != value) 
							|| (this._Make.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Make.Entity = null;
						previousValue.Vehicles.Remove(this);
					}
					this._Make.Entity = value;
					if ((value != null))
					{
						value.Vehicles.Add(this);
						this._makeID = value.makeID;
					}
					else
					{
						this._makeID = default(int);
					}
					this.SendPropertyChanged("Make");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Model_Vehicle", Storage="_Model", ThisKey="modelID", OtherKey="modelID", IsForeignKey=true)]
		public Model Model
		{
			get
			{
				return this._Model.Entity;
			}
			set
			{
				Model previousValue = this._Model.Entity;
				if (((previousValue != value) 
							|| (this._Model.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Model.Entity = null;
						previousValue.Vehicles.Remove(this);
					}
					this._Model.Entity = value;
					if ((value != null))
					{
						value.Vehicles.Add(this);
						this._modelID = value.modelID;
					}
					else
					{
						this._modelID = default(int);
					}
					this.SendPropertyChanged("Model");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Style_Vehicle", Storage="_Style", ThisKey="styleID", OtherKey="styleID", IsForeignKey=true)]
		public Style Style
		{
			get
			{
				return this._Style.Entity;
			}
			set
			{
				Style previousValue = this._Style.Entity;
				if (((previousValue != value) 
							|| (this._Style.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Style.Entity = null;
						previousValue.Vehicles.Remove(this);
					}
					this._Style.Entity = value;
					if ((value != null))
					{
						value.Vehicles.Add(this);
						this._styleID = value.styleID;
					}
					else
					{
						this._styleID = default(int);
					}
					this.SendPropertyChanged("Style");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Year_Vehicle", Storage="_Year", ThisKey="yearID", OtherKey="yearID", IsForeignKey=true)]
		public Year Year
		{
			get
			{
				return this._Year.Entity;
			}
			set
			{
				Year previousValue = this._Year.Entity;
				if (((previousValue != value) 
							|| (this._Year.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Year.Entity = null;
						previousValue.Vehicles.Remove(this);
					}
					this._Year.Entity = value;
					if ((value != null))
					{
						value.Vehicles.Add(this);
						this._yearID = value.yearID;
					}
					else
					{
						this._yearID = default(int);
					}
					this.SendPropertyChanged("Year");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VehicleParts(VehiclePart entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle = this;
		}
		
		private void detach_VehicleParts(VehiclePart entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lifestyle_Trailer")]
	public partial class Lifestyle_Trailer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _lifestyleTrailerID;
		
		private int _catID;
		
		private int _trailerID;
		
		private EntityRef<Categories> _Categories;
		
		private EntityRef<Trailer> _Trailer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnlifestyleTrailerIDChanging(int value);
    partial void OnlifestyleTrailerIDChanged();
    partial void OncatIDChanging(int value);
    partial void OncatIDChanged();
    partial void OntrailerIDChanging(int value);
    partial void OntrailerIDChanged();
    #endregion
		
		public Lifestyle_Trailer()
		{
			this._Categories = default(EntityRef<Categories>);
			this._Trailer = default(EntityRef<Trailer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lifestyleTrailerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int lifestyleTrailerID
		{
			get
			{
				return this._lifestyleTrailerID;
			}
			set
			{
				if ((this._lifestyleTrailerID != value))
				{
					this.OnlifestyleTrailerIDChanging(value);
					this.SendPropertyChanging();
					this._lifestyleTrailerID = value;
					this.SendPropertyChanged("lifestyleTrailerID");
					this.OnlifestyleTrailerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_catID", DbType="Int NOT NULL")]
		public int catID
		{
			get
			{
				return this._catID;
			}
			set
			{
				if ((this._catID != value))
				{
					if (this._Categories.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncatIDChanging(value);
					this.SendPropertyChanging();
					this._catID = value;
					this.SendPropertyChanged("catID");
					this.OncatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trailerID", DbType="Int NOT NULL")]
		public int trailerID
		{
			get
			{
				return this._trailerID;
			}
			set
			{
				if ((this._trailerID != value))
				{
					if (this._Trailer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntrailerIDChanging(value);
					this.SendPropertyChanging();
					this._trailerID = value;
					this.SendPropertyChanged("trailerID");
					this.OntrailerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categories_Lifestyle_Trailer", Storage="_Categories", ThisKey="catID", OtherKey="catID", IsForeignKey=true)]
		public Categories Categories
		{
			get
			{
				return this._Categories.Entity;
			}
			set
			{
				Categories previousValue = this._Categories.Entity;
				if (((previousValue != value) 
							|| (this._Categories.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Categories.Entity = null;
						previousValue.Lifestyle_Trailers.Remove(this);
					}
					this._Categories.Entity = value;
					if ((value != null))
					{
						value.Lifestyle_Trailers.Add(this);
						this._catID = value.catID;
					}
					else
					{
						this._catID = default(int);
					}
					this.SendPropertyChanged("Categories");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Trailer_Lifestyle_Trailer", Storage="_Trailer", ThisKey="trailerID", OtherKey="trailerID", IsForeignKey=true)]
		public Trailer Trailer
		{
			get
			{
				return this._Trailer.Entity;
			}
			set
			{
				Trailer previousValue = this._Trailer.Entity;
				if (((previousValue != value) 
							|| (this._Trailer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Trailer.Entity = null;
						previousValue.Lifestyle_Trailers.Remove(this);
					}
					this._Trailer.Entity = value;
					if ((value != null))
					{
						value.Lifestyle_Trailers.Add(this);
						this._trailerID = value.trailerID;
					}
					else
					{
						this._trailerID = default(int);
					}
					this.SendPropertyChanged("Trailer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Price")]
	public partial class Price : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _priceID;
		
		private int _partID;
		
		private string _priceType;
		
		private decimal _price1;
		
		private EntityRef<Part> _Part;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpriceIDChanging(int value);
    partial void OnpriceIDChanged();
    partial void OnpartIDChanging(int value);
    partial void OnpartIDChanged();
    partial void OnpriceTypeChanging(string value);
    partial void OnpriceTypeChanged();
    partial void Onprice1Changing(decimal value);
    partial void Onprice1Changed();
    #endregion
		
		public Price()
		{
			this._Part = default(EntityRef<Part>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_priceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int priceID
		{
			get
			{
				return this._priceID;
			}
			set
			{
				if ((this._priceID != value))
				{
					this.OnpriceIDChanging(value);
					this.SendPropertyChanging();
					this._priceID = value;
					this.SendPropertyChanged("priceID");
					this.OnpriceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partID", DbType="Int NOT NULL")]
		public int partID
		{
			get
			{
				return this._partID;
			}
			set
			{
				if ((this._partID != value))
				{
					if (this._Part.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpartIDChanging(value);
					this.SendPropertyChanging();
					this._partID = value;
					this.SendPropertyChanged("partID");
					this.OnpartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_priceType", DbType="VarChar(255)")]
		public string priceType
		{
			get
			{
				return this._priceType;
			}
			set
			{
				if ((this._priceType != value))
				{
					this.OnpriceTypeChanging(value);
					this.SendPropertyChanging();
					this._priceType = value;
					this.SendPropertyChanged("priceType");
					this.OnpriceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="price", Storage="_price1", DbType="Money NOT NULL")]
		public decimal price1
		{
			get
			{
				return this._price1;
			}
			set
			{
				if ((this._price1 != value))
				{
					this.Onprice1Changing(value);
					this.SendPropertyChanging();
					this._price1 = value;
					this.SendPropertyChanged("price1");
					this.Onprice1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Part_Price", Storage="_Part", ThisKey="partID", OtherKey="partID", IsForeignKey=true)]
		public Part Part
		{
			get
			{
				return this._Part.Entity;
			}
			set
			{
				Part previousValue = this._Part.Entity;
				if (((previousValue != value) 
							|| (this._Part.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Part.Entity = null;
						previousValue.Prices.Remove(this);
					}
					this._Part.Entity = value;
					if ((value != null))
					{
						value.Prices.Add(this);
						this._partID = value.partID;
					}
					else
					{
						this._partID = default(int);
					}
					this.SendPropertyChanged("Part");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Review")]
	public partial class Review : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _reviewID;
		
		private System.Nullable<int> _partID;
		
		private int _rating;
		
		private string _subject;
		
		private string _review_text;
		
		private string _name;
		
		private string _email;
		
		private bool _active;
		
		private bool _approved;
		
		private System.DateTime _createdDate;
		
		private int _cust_id;
		
		private EntityRef<Part> _Part;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnreviewIDChanging(int value);
    partial void OnreviewIDChanged();
    partial void OnpartIDChanging(System.Nullable<int> value);
    partial void OnpartIDChanged();
    partial void OnratingChanging(int value);
    partial void OnratingChanged();
    partial void OnsubjectChanging(string value);
    partial void OnsubjectChanged();
    partial void Onreview_textChanging(string value);
    partial void Onreview_textChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OnapprovedChanging(bool value);
    partial void OnapprovedChanged();
    partial void OncreatedDateChanging(System.DateTime value);
    partial void OncreatedDateChanged();
    partial void Oncust_idChanging(int value);
    partial void Oncust_idChanged();
    #endregion
		
		public Review()
		{
			this._Part = default(EntityRef<Part>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reviewID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int reviewID
		{
			get
			{
				return this._reviewID;
			}
			set
			{
				if ((this._reviewID != value))
				{
					this.OnreviewIDChanging(value);
					this.SendPropertyChanging();
					this._reviewID = value;
					this.SendPropertyChanged("reviewID");
					this.OnreviewIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partID", DbType="Int")]
		public System.Nullable<int> partID
		{
			get
			{
				return this._partID;
			}
			set
			{
				if ((this._partID != value))
				{
					if (this._Part.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpartIDChanging(value);
					this.SendPropertyChanging();
					this._partID = value;
					this.SendPropertyChanged("partID");
					this.OnpartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rating", DbType="Int NOT NULL")]
		public int rating
		{
			get
			{
				return this._rating;
			}
			set
			{
				if ((this._rating != value))
				{
					this.OnratingChanging(value);
					this.SendPropertyChanging();
					this._rating = value;
					this.SendPropertyChanged("rating");
					this.OnratingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject", DbType="VarChar(255)")]
		public string subject
		{
			get
			{
				return this._subject;
			}
			set
			{
				if ((this._subject != value))
				{
					this.OnsubjectChanging(value);
					this.SendPropertyChanging();
					this._subject = value;
					this.SendPropertyChanged("subject");
					this.OnsubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_review_text", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string review_text
		{
			get
			{
				return this._review_text;
			}
			set
			{
				if ((this._review_text != value))
				{
					this.Onreview_textChanging(value);
					this.SendPropertyChanging();
					this._review_text = value;
					this.SendPropertyChanged("review_text");
					this.Onreview_textChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(500)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(500)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_approved", DbType="Bit NOT NULL")]
		public bool approved
		{
			get
			{
				return this._approved;
			}
			set
			{
				if ((this._approved != value))
				{
					this.OnapprovedChanging(value);
					this.SendPropertyChanging();
					this._approved = value;
					this.SendPropertyChanged("approved");
					this.OnapprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdDate", DbType="DateTime NOT NULL")]
		public System.DateTime createdDate
		{
			get
			{
				return this._createdDate;
			}
			set
			{
				if ((this._createdDate != value))
				{
					this.OncreatedDateChanging(value);
					this.SendPropertyChanging();
					this._createdDate = value;
					this.SendPropertyChanged("createdDate");
					this.OncreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_id", DbType="Int NOT NULL")]
		public int cust_id
		{
			get
			{
				return this._cust_id;
			}
			set
			{
				if ((this._cust_id != value))
				{
					this.Oncust_idChanging(value);
					this.SendPropertyChanging();
					this._cust_id = value;
					this.SendPropertyChanged("cust_id");
					this.Oncust_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Part_Review", Storage="_Part", ThisKey="partID", OtherKey="partID", IsForeignKey=true)]
		public Part Part
		{
			get
			{
				return this._Part.Entity;
			}
			set
			{
				Part previousValue = this._Part.Entity;
				if (((previousValue != value) 
							|| (this._Part.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Part.Entity = null;
						previousValue.Reviews.Remove(this);
					}
					this._Part.Entity = value;
					if ((value != null))
					{
						value.Reviews.Add(this);
						this._partID = value.partID;
					}
					else
					{
						this._partID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Part");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PartImages")]
	public partial class PartImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _imageID;
		
		private int _sizeID;
		
		private char _sort;
		
		private string _path;
		
		private int _height;
		
		private int _width;
		
		private int _partID;
		
		private EntityRef<Part> _Part;
		
		private EntityRef<PartImageSize> _PartImageSize;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnimageIDChanging(int value);
    partial void OnimageIDChanged();
    partial void OnsizeIDChanging(int value);
    partial void OnsizeIDChanged();
    partial void OnsortChanging(char value);
    partial void OnsortChanged();
    partial void OnpathChanging(string value);
    partial void OnpathChanged();
    partial void OnheightChanging(int value);
    partial void OnheightChanged();
    partial void OnwidthChanging(int value);
    partial void OnwidthChanged();
    partial void OnpartIDChanging(int value);
    partial void OnpartIDChanged();
    #endregion
		
		public PartImage()
		{
			this._Part = default(EntityRef<Part>);
			this._PartImageSize = default(EntityRef<PartImageSize>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int imageID
		{
			get
			{
				return this._imageID;
			}
			set
			{
				if ((this._imageID != value))
				{
					this.OnimageIDChanging(value);
					this.SendPropertyChanging();
					this._imageID = value;
					this.SendPropertyChanged("imageID");
					this.OnimageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sizeID", DbType="Int NOT NULL")]
		public int sizeID
		{
			get
			{
				return this._sizeID;
			}
			set
			{
				if ((this._sizeID != value))
				{
					if (this._PartImageSize.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsizeIDChanging(value);
					this.SendPropertyChanging();
					this._sizeID = value;
					this.SendPropertyChanged("sizeID");
					this.OnsizeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort", DbType="NChar(1) NOT NULL")]
		public char sort
		{
			get
			{
				return this._sort;
			}
			set
			{
				if ((this._sort != value))
				{
					this.OnsortChanging(value);
					this.SendPropertyChanging();
					this._sort = value;
					this.SendPropertyChanged("sort");
					this.OnsortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_path", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string path
		{
			get
			{
				return this._path;
			}
			set
			{
				if ((this._path != value))
				{
					this.OnpathChanging(value);
					this.SendPropertyChanging();
					this._path = value;
					this.SendPropertyChanged("path");
					this.OnpathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_height", DbType="Int NOT NULL")]
		public int height
		{
			get
			{
				return this._height;
			}
			set
			{
				if ((this._height != value))
				{
					this.OnheightChanging(value);
					this.SendPropertyChanging();
					this._height = value;
					this.SendPropertyChanged("height");
					this.OnheightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_width", DbType="Int NOT NULL")]
		public int width
		{
			get
			{
				return this._width;
			}
			set
			{
				if ((this._width != value))
				{
					this.OnwidthChanging(value);
					this.SendPropertyChanging();
					this._width = value;
					this.SendPropertyChanged("width");
					this.OnwidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partID", DbType="Int NOT NULL")]
		public int partID
		{
			get
			{
				return this._partID;
			}
			set
			{
				if ((this._partID != value))
				{
					if (this._Part.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpartIDChanging(value);
					this.SendPropertyChanging();
					this._partID = value;
					this.SendPropertyChanged("partID");
					this.OnpartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Part_PartImage", Storage="_Part", ThisKey="partID", OtherKey="partID", IsForeignKey=true)]
		public Part Part
		{
			get
			{
				return this._Part.Entity;
			}
			set
			{
				Part previousValue = this._Part.Entity;
				if (((previousValue != value) 
							|| (this._Part.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Part.Entity = null;
						previousValue.PartImages.Remove(this);
					}
					this._Part.Entity = value;
					if ((value != null))
					{
						value.PartImages.Add(this);
						this._partID = value.partID;
					}
					else
					{
						this._partID = default(int);
					}
					this.SendPropertyChanged("Part");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PartImageSize_PartImage", Storage="_PartImageSize", ThisKey="sizeID", OtherKey="sizeID", IsForeignKey=true)]
		public PartImageSize PartImageSize
		{
			get
			{
				return this._PartImageSize.Entity;
			}
			set
			{
				PartImageSize previousValue = this._PartImageSize.Entity;
				if (((previousValue != value) 
							|| (this._PartImageSize.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PartImageSize.Entity = null;
						previousValue.PartImages.Remove(this);
					}
					this._PartImageSize.Entity = value;
					if ((value != null))
					{
						value.PartImages.Add(this);
						this._sizeID = value.sizeID;
					}
					else
					{
						this._sizeID = default(int);
					}
					this.SendPropertyChanged("PartImageSize");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContentType")]
	public partial class ContentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cTypeID;
		
		private string _type;
		
		private bool _allowHTML;
		
		private EntitySet<Content> _Contents;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncTypeIDChanging(int value);
    partial void OncTypeIDChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnallowHTMLChanging(bool value);
    partial void OnallowHTMLChanged();
    #endregion
		
		public ContentType()
		{
			this._Contents = new EntitySet<Content>(new Action<Content>(this.attach_Contents), new Action<Content>(this.detach_Contents));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cTypeID
		{
			get
			{
				return this._cTypeID;
			}
			set
			{
				if ((this._cTypeID != value))
				{
					this.OncTypeIDChanging(value);
					this.SendPropertyChanging();
					this._cTypeID = value;
					this.SendPropertyChanged("cTypeID");
					this.OncTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(255)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_allowHTML", DbType="Bit NOT NULL")]
		public bool allowHTML
		{
			get
			{
				return this._allowHTML;
			}
			set
			{
				if ((this._allowHTML != value))
				{
					this.OnallowHTMLChanging(value);
					this.SendPropertyChanging();
					this._allowHTML = value;
					this.SendPropertyChanged("allowHTML");
					this.OnallowHTMLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentType_Content", Storage="_Contents", ThisKey="cTypeID", OtherKey="cTypeID")]
		internal EntitySet<Content> Contents
		{
			get
			{
				return this._Contents;
			}
			set
			{
				this._Contents.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Contents(Content entity)
		{
			this.SendPropertyChanging();
			entity.ContentType = this;
		}
		
		private void detach_Contents(Content entity)
		{
			this.SendPropertyChanging();
			entity.ContentType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VehiclePart")]
	public partial class VehiclePart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _vPartID;
		
		private int _vehicleID;
		
		private int _partID;
		
		private string _drilling;
		
		private string _exposed;
		
		private System.Nullable<int> _installTime;
		
		private EntitySet<VehiclePartAttribute> _VehiclePartAttributes;
		
		private EntityRef<Part> _Part;
		
		private EntityRef<Vehicle> _Vehicle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnvPartIDChanging(int value);
    partial void OnvPartIDChanged();
    partial void OnvehicleIDChanging(int value);
    partial void OnvehicleIDChanged();
    partial void OnpartIDChanging(int value);
    partial void OnpartIDChanged();
    partial void OndrillingChanging(string value);
    partial void OndrillingChanged();
    partial void OnexposedChanging(string value);
    partial void OnexposedChanged();
    partial void OninstallTimeChanging(System.Nullable<int> value);
    partial void OninstallTimeChanged();
    #endregion
		
		public VehiclePart()
		{
			this._VehiclePartAttributes = new EntitySet<VehiclePartAttribute>(new Action<VehiclePartAttribute>(this.attach_VehiclePartAttributes), new Action<VehiclePartAttribute>(this.detach_VehiclePartAttributes));
			this._Part = default(EntityRef<Part>);
			this._Vehicle = default(EntityRef<Vehicle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vPartID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int vPartID
		{
			get
			{
				return this._vPartID;
			}
			set
			{
				if ((this._vPartID != value))
				{
					this.OnvPartIDChanging(value);
					this.SendPropertyChanging();
					this._vPartID = value;
					this.SendPropertyChanged("vPartID");
					this.OnvPartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicleID", DbType="Int NOT NULL")]
		public int vehicleID
		{
			get
			{
				return this._vehicleID;
			}
			set
			{
				if ((this._vehicleID != value))
				{
					if (this._Vehicle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnvehicleIDChanging(value);
					this.SendPropertyChanging();
					this._vehicleID = value;
					this.SendPropertyChanged("vehicleID");
					this.OnvehicleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partID", DbType="Int NOT NULL")]
		public int partID
		{
			get
			{
				return this._partID;
			}
			set
			{
				if ((this._partID != value))
				{
					if (this._Part.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpartIDChanging(value);
					this.SendPropertyChanging();
					this._partID = value;
					this.SendPropertyChanged("partID");
					this.OnpartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drilling", DbType="VarChar(100)")]
		public string drilling
		{
			get
			{
				return this._drilling;
			}
			set
			{
				if ((this._drilling != value))
				{
					this.OndrillingChanging(value);
					this.SendPropertyChanging();
					this._drilling = value;
					this.SendPropertyChanged("drilling");
					this.OndrillingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_exposed", DbType="VarChar(100)")]
		public string exposed
		{
			get
			{
				return this._exposed;
			}
			set
			{
				if ((this._exposed != value))
				{
					this.OnexposedChanging(value);
					this.SendPropertyChanging();
					this._exposed = value;
					this.SendPropertyChanged("exposed");
					this.OnexposedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_installTime", DbType="Int")]
		public System.Nullable<int> installTime
		{
			get
			{
				return this._installTime;
			}
			set
			{
				if ((this._installTime != value))
				{
					this.OninstallTimeChanging(value);
					this.SendPropertyChanging();
					this._installTime = value;
					this.SendPropertyChanged("installTime");
					this.OninstallTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VehiclePart_VehiclePartAttribute", Storage="_VehiclePartAttributes", ThisKey="vPartID", OtherKey="vPartID")]
		public EntitySet<VehiclePartAttribute> VehiclePartAttributes
		{
			get
			{
				return this._VehiclePartAttributes;
			}
			set
			{
				this._VehiclePartAttributes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Part_VehiclePart", Storage="_Part", ThisKey="partID", OtherKey="partID", IsForeignKey=true)]
		public Part Part
		{
			get
			{
				return this._Part.Entity;
			}
			set
			{
				Part previousValue = this._Part.Entity;
				if (((previousValue != value) 
							|| (this._Part.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Part.Entity = null;
						previousValue.VehicleParts.Remove(this);
					}
					this._Part.Entity = value;
					if ((value != null))
					{
						value.VehicleParts.Add(this);
						this._partID = value.partID;
					}
					else
					{
						this._partID = default(int);
					}
					this.SendPropertyChanged("Part");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_VehiclePart", Storage="_Vehicle", ThisKey="vehicleID", OtherKey="vehicleID", IsForeignKey=true)]
		public Vehicle Vehicle
		{
			get
			{
				return this._Vehicle.Entity;
			}
			set
			{
				Vehicle previousValue = this._Vehicle.Entity;
				if (((previousValue != value) 
							|| (this._Vehicle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vehicle.Entity = null;
						previousValue.VehicleParts.Remove(this);
					}
					this._Vehicle.Entity = value;
					if ((value != null))
					{
						value.VehicleParts.Add(this);
						this._vehicleID = value.vehicleID;
					}
					else
					{
						this._vehicleID = default(int);
					}
					this.SendPropertyChanged("Vehicle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VehiclePartAttributes(VehiclePartAttribute entity)
		{
			this.SendPropertyChanging();
			entity.VehiclePart = this;
		}
		
		private void detach_VehiclePartAttributes(VehiclePartAttribute entity)
		{
			this.SendPropertyChanging();
			entity.VehiclePart = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RelatedPart")]
	public partial class RelatedPart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _relPartID;
		
		private int _partID;
		
		private long _relatedID;
		
		private int _rTypeID;
		
		private EntityRef<Part> _Part;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnrelPartIDChanging(int value);
    partial void OnrelPartIDChanged();
    partial void OnpartIDChanging(int value);
    partial void OnpartIDChanged();
    partial void OnrelatedIDChanging(long value);
    partial void OnrelatedIDChanged();
    partial void OnrTypeIDChanging(int value);
    partial void OnrTypeIDChanged();
    #endregion
		
		public RelatedPart()
		{
			this._Part = default(EntityRef<Part>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_relPartID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int relPartID
		{
			get
			{
				return this._relPartID;
			}
			set
			{
				if ((this._relPartID != value))
				{
					this.OnrelPartIDChanging(value);
					this.SendPropertyChanging();
					this._relPartID = value;
					this.SendPropertyChanged("relPartID");
					this.OnrelPartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partID", DbType="Int NOT NULL")]
		public int partID
		{
			get
			{
				return this._partID;
			}
			set
			{
				if ((this._partID != value))
				{
					if (this._Part.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpartIDChanging(value);
					this.SendPropertyChanging();
					this._partID = value;
					this.SendPropertyChanged("partID");
					this.OnpartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_relatedID", DbType="BigInt NOT NULL")]
		public long relatedID
		{
			get
			{
				return this._relatedID;
			}
			set
			{
				if ((this._relatedID != value))
				{
					this.OnrelatedIDChanging(value);
					this.SendPropertyChanging();
					this._relatedID = value;
					this.SendPropertyChanged("relatedID");
					this.OnrelatedIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rTypeID", DbType="Int NOT NULL")]
		public int rTypeID
		{
			get
			{
				return this._rTypeID;
			}
			set
			{
				if ((this._rTypeID != value))
				{
					this.OnrTypeIDChanging(value);
					this.SendPropertyChanging();
					this._rTypeID = value;
					this.SendPropertyChanged("rTypeID");
					this.OnrTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Part_RelatedPart", Storage="_Part", ThisKey="partID", OtherKey="partID", IsForeignKey=true)]
		public Part Part
		{
			get
			{
				return this._Part.Entity;
			}
			set
			{
				Part previousValue = this._Part.Entity;
				if (((previousValue != value) 
							|| (this._Part.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Part.Entity = null;
						previousValue.RelatedParts.Remove(this);
					}
					this._Part.Entity = value;
					if ((value != null))
					{
						value.RelatedParts.Add(this);
						this._partID = value.partID;
					}
					else
					{
						this._partID = default(int);
					}
					this.SendPropertyChanged("Part");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PartVideo")]
	public partial class PartVideo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pVideoID;
		
		private int _partID;
		
		private string _video;
		
		private int _vTypeID;
		
		private bool _isPrimary;
		
		private EntityRef<Part> _Part;
		
		private EntityRef<videoType> _videoType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpVideoIDChanging(int value);
    partial void OnpVideoIDChanged();
    partial void OnpartIDChanging(int value);
    partial void OnpartIDChanged();
    partial void OnvideoChanging(string value);
    partial void OnvideoChanged();
    partial void OnvTypeIDChanging(int value);
    partial void OnvTypeIDChanged();
    partial void OnisPrimaryChanging(bool value);
    partial void OnisPrimaryChanged();
    #endregion
		
		public PartVideo()
		{
			this._Part = default(EntityRef<Part>);
			this._videoType = default(EntityRef<videoType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pVideoID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pVideoID
		{
			get
			{
				return this._pVideoID;
			}
			set
			{
				if ((this._pVideoID != value))
				{
					this.OnpVideoIDChanging(value);
					this.SendPropertyChanging();
					this._pVideoID = value;
					this.SendPropertyChanged("pVideoID");
					this.OnpVideoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partID", DbType="Int NOT NULL")]
		public int partID
		{
			get
			{
				return this._partID;
			}
			set
			{
				if ((this._partID != value))
				{
					if (this._Part.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpartIDChanging(value);
					this.SendPropertyChanging();
					this._partID = value;
					this.SendPropertyChanged("partID");
					this.OnpartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_video", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string video
		{
			get
			{
				return this._video;
			}
			set
			{
				if ((this._video != value))
				{
					this.OnvideoChanging(value);
					this.SendPropertyChanging();
					this._video = value;
					this.SendPropertyChanged("video");
					this.OnvideoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vTypeID", DbType="Int NOT NULL")]
		public int vTypeID
		{
			get
			{
				return this._vTypeID;
			}
			set
			{
				if ((this._vTypeID != value))
				{
					if (this._videoType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnvTypeIDChanging(value);
					this.SendPropertyChanging();
					this._vTypeID = value;
					this.SendPropertyChanged("vTypeID");
					this.OnvTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isPrimary", DbType="Bit NOT NULL")]
		public bool isPrimary
		{
			get
			{
				return this._isPrimary;
			}
			set
			{
				if ((this._isPrimary != value))
				{
					this.OnisPrimaryChanging(value);
					this.SendPropertyChanging();
					this._isPrimary = value;
					this.SendPropertyChanged("isPrimary");
					this.OnisPrimaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Part_PartVideo", Storage="_Part", ThisKey="partID", OtherKey="partID", IsForeignKey=true)]
		internal Part Part
		{
			get
			{
				return this._Part.Entity;
			}
			set
			{
				Part previousValue = this._Part.Entity;
				if (((previousValue != value) 
							|| (this._Part.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Part.Entity = null;
						previousValue.PartVideos.Remove(this);
					}
					this._Part.Entity = value;
					if ((value != null))
					{
						value.PartVideos.Add(this);
						this._partID = value.partID;
					}
					else
					{
						this._partID = default(int);
					}
					this.SendPropertyChanged("Part");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="videoType_PartVideo", Storage="_videoType", ThisKey="vTypeID", OtherKey="vTypeID", IsForeignKey=true)]
		public videoType videoType
		{
			get
			{
				return this._videoType.Entity;
			}
			set
			{
				videoType previousValue = this._videoType.Entity;
				if (((previousValue != value) 
							|| (this._videoType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._videoType.Entity = null;
						previousValue.PartVideos.Remove(this);
					}
					this._videoType.Entity = value;
					if ((value != null))
					{
						value.PartVideos.Add(this);
						this._vTypeID = value.vTypeID;
					}
					else
					{
						this._vTypeID = default(int);
					}
					this.SendPropertyChanged("videoType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.videoType")]
	public partial class videoType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _vTypeID;
		
		private string _name;
		
		private string _icon;
		
		private EntitySet<PartVideo> _PartVideos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnvTypeIDChanging(int value);
    partial void OnvTypeIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OniconChanging(string value);
    partial void OniconChanged();
    #endregion
		
		public videoType()
		{
			this._PartVideos = new EntitySet<PartVideo>(new Action<PartVideo>(this.attach_PartVideos), new Action<PartVideo>(this.detach_PartVideos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int vTypeID
		{
			get
			{
				return this._vTypeID;
			}
			set
			{
				if ((this._vTypeID != value))
				{
					this.OnvTypeIDChanging(value);
					this.SendPropertyChanging();
					this._vTypeID = value;
					this.SendPropertyChanged("vTypeID");
					this.OnvTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(255)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_icon", DbType="VarChar(255)")]
		public string icon
		{
			get
			{
				return this._icon;
			}
			set
			{
				if ((this._icon != value))
				{
					this.OniconChanging(value);
					this.SendPropertyChanging();
					this._icon = value;
					this.SendPropertyChanged("icon");
					this.OniconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="videoType_PartVideo", Storage="_PartVideos", ThisKey="vTypeID", OtherKey="vTypeID")]
		internal EntitySet<PartVideo> PartVideos
		{
			get
			{
				return this._PartVideos;
			}
			set
			{
				this._PartVideos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PartVideos(PartVideo entity)
		{
			this.SendPropertyChanging();
			entity.videoType = this;
		}
		
		private void detach_PartVideos(PartVideo entity)
		{
			this.SendPropertyChanging();
			entity.videoType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContentBridge")]
	public partial class ContentBridge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cBridgeID;
		
		private System.Nullable<int> _catID;
		
		private System.Nullable<int> _partID;
		
		private int _contentID;
		
		private EntityRef<Categories> _Categories;
		
		private EntityRef<Content> _Content;
		
		private EntityRef<Part> _Part;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncBridgeIDChanging(int value);
    partial void OncBridgeIDChanged();
    partial void OncatIDChanging(System.Nullable<int> value);
    partial void OncatIDChanged();
    partial void OnpartIDChanging(System.Nullable<int> value);
    partial void OnpartIDChanged();
    partial void OncontentIDChanging(int value);
    partial void OncontentIDChanged();
    #endregion
		
		public ContentBridge()
		{
			this._Categories = default(EntityRef<Categories>);
			this._Content = default(EntityRef<Content>);
			this._Part = default(EntityRef<Part>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cBridgeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cBridgeID
		{
			get
			{
				return this._cBridgeID;
			}
			set
			{
				if ((this._cBridgeID != value))
				{
					this.OncBridgeIDChanging(value);
					this.SendPropertyChanging();
					this._cBridgeID = value;
					this.SendPropertyChanged("cBridgeID");
					this.OncBridgeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_catID", DbType="Int")]
		public System.Nullable<int> catID
		{
			get
			{
				return this._catID;
			}
			set
			{
				if ((this._catID != value))
				{
					if (this._Categories.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncatIDChanging(value);
					this.SendPropertyChanging();
					this._catID = value;
					this.SendPropertyChanged("catID");
					this.OncatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partID", DbType="Int")]
		public System.Nullable<int> partID
		{
			get
			{
				return this._partID;
			}
			set
			{
				if ((this._partID != value))
				{
					if (this._Part.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpartIDChanging(value);
					this.SendPropertyChanging();
					this._partID = value;
					this.SendPropertyChanged("partID");
					this.OnpartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contentID", DbType="Int NOT NULL")]
		public int contentID
		{
			get
			{
				return this._contentID;
			}
			set
			{
				if ((this._contentID != value))
				{
					if (this._Content.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncontentIDChanging(value);
					this.SendPropertyChanging();
					this._contentID = value;
					this.SendPropertyChanged("contentID");
					this.OncontentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categories_ContentBridge", Storage="_Categories", ThisKey="catID", OtherKey="catID", IsForeignKey=true)]
		internal Categories Categories
		{
			get
			{
				return this._Categories.Entity;
			}
			set
			{
				Categories previousValue = this._Categories.Entity;
				if (((previousValue != value) 
							|| (this._Categories.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Categories.Entity = null;
						previousValue.ContentBridges.Remove(this);
					}
					this._Categories.Entity = value;
					if ((value != null))
					{
						value.ContentBridges.Add(this);
						this._catID = value.catID;
					}
					else
					{
						this._catID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Categories");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Content_ContentBridge", Storage="_Content", ThisKey="contentID", OtherKey="contentID", IsForeignKey=true)]
		public Content Content
		{
			get
			{
				return this._Content.Entity;
			}
			set
			{
				Content previousValue = this._Content.Entity;
				if (((previousValue != value) 
							|| (this._Content.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Content.Entity = null;
						previousValue.ContentBridges.Remove(this);
					}
					this._Content.Entity = value;
					if ((value != null))
					{
						value.ContentBridges.Add(this);
						this._contentID = value.contentID;
					}
					else
					{
						this._contentID = default(int);
					}
					this.SendPropertyChanged("Content");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Part_ContentBridge", Storage="_Part", ThisKey="partID", OtherKey="partID", IsForeignKey=true)]
		public Part Part
		{
			get
			{
				return this._Part.Entity;
			}
			set
			{
				Part previousValue = this._Part.Entity;
				if (((previousValue != value) 
							|| (this._Part.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Part.Entity = null;
						previousValue.ContentBridges.Remove(this);
					}
					this._Part.Entity = value;
					if ((value != null))
					{
						value.ContentBridges.Add(this);
						this._partID = value.partID;
					}
					else
					{
						this._partID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Part");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UnitOfMeasure")]
	public partial class UnitOfMeasure : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _name;
		
		private string _code;
		
		private EntityRef<PartPackage> _PartPackage;
		
		private EntityRef<PartPackage> _PartPackage1;
		
		private EntityRef<PartPackage> _PartPackage2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    #endregion
		
		public UnitOfMeasure()
		{
			this._PartPackage = default(EntityRef<PartPackage>);
			this._PartPackage1 = default(EntityRef<PartPackage>);
			this._PartPackage2 = default(EntityRef<PartPackage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (((this._PartPackage.HasLoadedOrAssignedValue || this._PartPackage1.HasLoadedOrAssignedValue) 
								|| this._PartPackage2.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(255)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PartPackage_UnitOfMeasure", Storage="_PartPackage", ThisKey="ID", OtherKey="dimensionUOM", IsForeignKey=true)]
		internal PartPackage PartPackage
		{
			get
			{
				return this._PartPackage.Entity;
			}
			set
			{
				PartPackage previousValue = this._PartPackage.Entity;
				if (((previousValue != value) 
							|| (this._PartPackage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PartPackage.Entity = null;
						previousValue.dimensionUnit = null;
					}
					this._PartPackage.Entity = value;
					if ((value != null))
					{
						value.dimensionUnit = this;
						this._ID = value.dimensionUOM;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("PartPackage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PartPackage_UnitOfMeasure1", Storage="_PartPackage1", ThisKey="ID", OtherKey="weightUOM", IsForeignKey=true)]
		internal PartPackage PartPackage1
		{
			get
			{
				return this._PartPackage1.Entity;
			}
			set
			{
				PartPackage previousValue = this._PartPackage1.Entity;
				if (((previousValue != value) 
							|| (this._PartPackage1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PartPackage1.Entity = null;
						previousValue.weightUnit = null;
					}
					this._PartPackage1.Entity = value;
					if ((value != null))
					{
						value.weightUnit = this;
						this._ID = value.weightUOM;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("PartPackage1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PartPackage_UnitOfMeasure2", Storage="_PartPackage2", ThisKey="ID", OtherKey="packageUOM", IsForeignKey=true)]
		internal PartPackage PartPackage2
		{
			get
			{
				return this._PartPackage2.Entity;
			}
			set
			{
				PartPackage previousValue = this._PartPackage2.Entity;
				if (((previousValue != value) 
							|| (this._PartPackage2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PartPackage2.Entity = null;
						previousValue.packageUnit = null;
					}
					this._PartPackage2.Entity = value;
					if ((value != null))
					{
						value.packageUnit = this;
						this._ID = value.packageUOM;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("PartPackage2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PartPackage")]
	public partial class PartPackage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _partID;
		
		private System.Nullable<double> _height;
		
		private System.Nullable<double> _width;
		
		private System.Nullable<double> _length;
		
		private System.Nullable<double> _weight;
		
		private int _dimensionUOM;
		
		private int _weightUOM;
		
		private int _packageUOM;
		
		private int _quantity;
		
		private EntityRef<UnitOfMeasure> _dimensionUnit;
		
		private EntityRef<UnitOfMeasure> _weightUnit;
		
		private EntityRef<UnitOfMeasure> _packageUnit;
		
		private EntityRef<Part> _Part;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnpartIDChanging(int value);
    partial void OnpartIDChanged();
    partial void OnheightChanging(System.Nullable<double> value);
    partial void OnheightChanged();
    partial void OnwidthChanging(System.Nullable<double> value);
    partial void OnwidthChanged();
    partial void OnlengthChanging(System.Nullable<double> value);
    partial void OnlengthChanged();
    partial void OnweightChanging(System.Nullable<double> value);
    partial void OnweightChanged();
    partial void OndimensionUOMChanging(int value);
    partial void OndimensionUOMChanged();
    partial void OnweightUOMChanging(int value);
    partial void OnweightUOMChanged();
    partial void OnpackageUOMChanging(int value);
    partial void OnpackageUOMChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    #endregion
		
		public PartPackage()
		{
			this._dimensionUnit = default(EntityRef<UnitOfMeasure>);
			this._weightUnit = default(EntityRef<UnitOfMeasure>);
			this._packageUnit = default(EntityRef<UnitOfMeasure>);
			this._Part = default(EntityRef<Part>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partID", DbType="Int NOT NULL")]
		public int partID
		{
			get
			{
				return this._partID;
			}
			set
			{
				if ((this._partID != value))
				{
					if (this._Part.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpartIDChanging(value);
					this.SendPropertyChanging();
					this._partID = value;
					this.SendPropertyChanged("partID");
					this.OnpartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_height", DbType="Float")]
		public System.Nullable<double> height
		{
			get
			{
				return this._height;
			}
			set
			{
				if ((this._height != value))
				{
					this.OnheightChanging(value);
					this.SendPropertyChanging();
					this._height = value;
					this.SendPropertyChanged("height");
					this.OnheightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_width", DbType="Float")]
		public System.Nullable<double> width
		{
			get
			{
				return this._width;
			}
			set
			{
				if ((this._width != value))
				{
					this.OnwidthChanging(value);
					this.SendPropertyChanging();
					this._width = value;
					this.SendPropertyChanged("width");
					this.OnwidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_length", DbType="Float")]
		public System.Nullable<double> length
		{
			get
			{
				return this._length;
			}
			set
			{
				if ((this._length != value))
				{
					this.OnlengthChanging(value);
					this.SendPropertyChanging();
					this._length = value;
					this.SendPropertyChanged("length");
					this.OnlengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weight", DbType="Float")]
		public System.Nullable<double> weight
		{
			get
			{
				return this._weight;
			}
			set
			{
				if ((this._weight != value))
				{
					this.OnweightChanging(value);
					this.SendPropertyChanging();
					this._weight = value;
					this.SendPropertyChanged("weight");
					this.OnweightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dimensionUOM", DbType="Int NOT NULL")]
		public int dimensionUOM
		{
			get
			{
				return this._dimensionUOM;
			}
			set
			{
				if ((this._dimensionUOM != value))
				{
					this.OndimensionUOMChanging(value);
					this.SendPropertyChanging();
					this._dimensionUOM = value;
					this.SendPropertyChanged("dimensionUOM");
					this.OndimensionUOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weightUOM", DbType="Int NOT NULL")]
		public int weightUOM
		{
			get
			{
				return this._weightUOM;
			}
			set
			{
				if ((this._weightUOM != value))
				{
					this.OnweightUOMChanging(value);
					this.SendPropertyChanging();
					this._weightUOM = value;
					this.SendPropertyChanged("weightUOM");
					this.OnweightUOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_packageUOM", DbType="Int NOT NULL")]
		public int packageUOM
		{
			get
			{
				return this._packageUOM;
			}
			set
			{
				if ((this._packageUOM != value))
				{
					this.OnpackageUOMChanging(value);
					this.SendPropertyChanging();
					this._packageUOM = value;
					this.SendPropertyChanged("packageUOM");
					this.OnpackageUOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PartPackage_UnitOfMeasure", Storage="_dimensionUnit", ThisKey="dimensionUOM", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public UnitOfMeasure dimensionUnit
		{
			get
			{
				return this._dimensionUnit.Entity;
			}
			set
			{
				UnitOfMeasure previousValue = this._dimensionUnit.Entity;
				if (((previousValue != value) 
							|| (this._dimensionUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dimensionUnit.Entity = null;
						previousValue.PartPackage = null;
					}
					this._dimensionUnit.Entity = value;
					if ((value != null))
					{
						value.PartPackage = this;
					}
					this.SendPropertyChanged("dimensionUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PartPackage_UnitOfMeasure1", Storage="_weightUnit", ThisKey="weightUOM", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public UnitOfMeasure weightUnit
		{
			get
			{
				return this._weightUnit.Entity;
			}
			set
			{
				UnitOfMeasure previousValue = this._weightUnit.Entity;
				if (((previousValue != value) 
							|| (this._weightUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._weightUnit.Entity = null;
						previousValue.PartPackage1 = null;
					}
					this._weightUnit.Entity = value;
					if ((value != null))
					{
						value.PartPackage1 = this;
					}
					this.SendPropertyChanged("weightUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PartPackage_UnitOfMeasure2", Storage="_packageUnit", ThisKey="packageUOM", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public UnitOfMeasure packageUnit
		{
			get
			{
				return this._packageUnit.Entity;
			}
			set
			{
				UnitOfMeasure previousValue = this._packageUnit.Entity;
				if (((previousValue != value) 
							|| (this._packageUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._packageUnit.Entity = null;
						previousValue.PartPackage2 = null;
					}
					this._packageUnit.Entity = value;
					if ((value != null))
					{
						value.PartPackage2 = this;
					}
					this.SendPropertyChanged("packageUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Part_PartPackage", Storage="_Part", ThisKey="partID", OtherKey="partID", IsForeignKey=true)]
		internal Part Part
		{
			get
			{
				return this._Part.Entity;
			}
			set
			{
				Part previousValue = this._Part.Entity;
				if (((previousValue != value) 
							|| (this._Part.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Part.Entity = null;
						previousValue.PartPackages.Remove(this);
					}
					this._Part.Entity = value;
					if ((value != null))
					{
						value.PartPackages.Add(this);
						this._partID = value.partID;
					}
					else
					{
						this._partID = default(int);
					}
					this.SendPropertyChanged("Part");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cust_id;
		
		private string _name;
		
		private string _email;
		
		private string _address;
		
		private string _city;
		
		private int _stateID;
		
		private string _phone;
		
		private string _fax;
		
		private string _contact_person;
		
		private int _dealer_type;
		
		private string _latitude;
		
		private string _longitude;
		
		private string _password;
		
		private string _website;
		
		private System.Nullable<int> _customerID;
		
		private bool _isDummy;
		
		private System.Nullable<int> _parentID;
		
		private string _searchURL;
		
		private string _eLocalURL;
		
		private string _logo;
		
		private string _address2;
		
		private string _postal_code;
		
		private int _mCodeID;
		
		private System.Nullable<int> _salesRepID;
		
		private System.Nullable<System.Guid> _APIKey;
		
		private int _tier;
		
		private bool _showWebsite;
		
		private EntitySet<PartState> _PartStates;
		
		private EntitySet<CustomerPricing> _CustomerPricings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncust_idChanging(int value);
    partial void Oncust_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnstateIDChanging(int value);
    partial void OnstateIDChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnfaxChanging(string value);
    partial void OnfaxChanged();
    partial void Oncontact_personChanging(string value);
    partial void Oncontact_personChanged();
    partial void Ondealer_typeChanging(int value);
    partial void Ondealer_typeChanged();
    partial void OnlatitudeChanging(string value);
    partial void OnlatitudeChanged();
    partial void OnlongitudeChanging(string value);
    partial void OnlongitudeChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnwebsiteChanging(string value);
    partial void OnwebsiteChanged();
    partial void OncustomerIDChanging(System.Nullable<int> value);
    partial void OncustomerIDChanged();
    partial void OnisDummyChanging(bool value);
    partial void OnisDummyChanged();
    partial void OnparentIDChanging(System.Nullable<int> value);
    partial void OnparentIDChanged();
    partial void OnsearchURLChanging(string value);
    partial void OnsearchURLChanged();
    partial void OneLocalURLChanging(string value);
    partial void OneLocalURLChanged();
    partial void OnlogoChanging(string value);
    partial void OnlogoChanged();
    partial void Onaddress2Changing(string value);
    partial void Onaddress2Changed();
    partial void Onpostal_codeChanging(string value);
    partial void Onpostal_codeChanged();
    partial void OnmCodeIDChanging(int value);
    partial void OnmCodeIDChanged();
    partial void OnsalesRepIDChanging(System.Nullable<int> value);
    partial void OnsalesRepIDChanged();
    partial void OnAPIKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAPIKeyChanged();
    partial void OntierChanging(int value);
    partial void OntierChanged();
    partial void OnshowWebsiteChanging(bool value);
    partial void OnshowWebsiteChanged();
    #endregion
		
		public Customer()
		{
			this._PartStates = new EntitySet<PartState>(new Action<PartState>(this.attach_PartStates), new Action<PartState>(this.detach_PartStates));
			this._CustomerPricings = new EntitySet<CustomerPricing>(new Action<CustomerPricing>(this.attach_CustomerPricings), new Action<CustomerPricing>(this.detach_CustomerPricings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cust_id
		{
			get
			{
				return this._cust_id;
			}
			set
			{
				if ((this._cust_id != value))
				{
					this.Oncust_idChanging(value);
					this.SendPropertyChanging();
					this._cust_id = value;
					this.SendPropertyChanged("cust_id");
					this.Oncust_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(255)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(255)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(500)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(150)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stateID", DbType="Int NOT NULL")]
		public int stateID
		{
			get
			{
				return this._stateID;
			}
			set
			{
				if ((this._stateID != value))
				{
					this.OnstateIDChanging(value);
					this.SendPropertyChanging();
					this._stateID = value;
					this.SendPropertyChanged("stateID");
					this.OnstateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(50)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fax", DbType="VarChar(50)")]
		public string fax
		{
			get
			{
				return this._fax;
			}
			set
			{
				if ((this._fax != value))
				{
					this.OnfaxChanging(value);
					this.SendPropertyChanging();
					this._fax = value;
					this.SendPropertyChanged("fax");
					this.OnfaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact_person", DbType="VarChar(300)")]
		public string contact_person
		{
			get
			{
				return this._contact_person;
			}
			set
			{
				if ((this._contact_person != value))
				{
					this.Oncontact_personChanging(value);
					this.SendPropertyChanging();
					this._contact_person = value;
					this.SendPropertyChanged("contact_person");
					this.Oncontact_personChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dealer_type", DbType="Int NOT NULL")]
		public int dealer_type
		{
			get
			{
				return this._dealer_type;
			}
			set
			{
				if ((this._dealer_type != value))
				{
					this.Ondealer_typeChanging(value);
					this.SendPropertyChanging();
					this._dealer_type = value;
					this.SendPropertyChanged("dealer_type");
					this.Ondealer_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_latitude", DbType="VarChar(200)")]
		public string latitude
		{
			get
			{
				return this._latitude;
			}
			set
			{
				if ((this._latitude != value))
				{
					this.OnlatitudeChanging(value);
					this.SendPropertyChanging();
					this._latitude = value;
					this.SendPropertyChanged("latitude");
					this.OnlatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_longitude", DbType="VarChar(200)")]
		public string longitude
		{
			get
			{
				return this._longitude;
			}
			set
			{
				if ((this._longitude != value))
				{
					this.OnlongitudeChanging(value);
					this.SendPropertyChanging();
					this._longitude = value;
					this.SendPropertyChanged("longitude");
					this.OnlongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(255)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_website", DbType="VarChar(500)")]
		public string website
		{
			get
			{
				return this._website;
			}
			set
			{
				if ((this._website != value))
				{
					this.OnwebsiteChanging(value);
					this.SendPropertyChanging();
					this._website = value;
					this.SendPropertyChanged("website");
					this.OnwebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerID", DbType="Int")]
		public System.Nullable<int> customerID
		{
			get
			{
				return this._customerID;
			}
			set
			{
				if ((this._customerID != value))
				{
					this.OncustomerIDChanging(value);
					this.SendPropertyChanging();
					this._customerID = value;
					this.SendPropertyChanged("customerID");
					this.OncustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDummy", DbType="Bit NOT NULL")]
		public bool isDummy
		{
			get
			{
				return this._isDummy;
			}
			set
			{
				if ((this._isDummy != value))
				{
					this.OnisDummyChanging(value);
					this.SendPropertyChanging();
					this._isDummy = value;
					this.SendPropertyChanged("isDummy");
					this.OnisDummyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parentID", DbType="Int")]
		public System.Nullable<int> parentID
		{
			get
			{
				return this._parentID;
			}
			set
			{
				if ((this._parentID != value))
				{
					this.OnparentIDChanging(value);
					this.SendPropertyChanging();
					this._parentID = value;
					this.SendPropertyChanged("parentID");
					this.OnparentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_searchURL", DbType="VarChar(500)")]
		public string searchURL
		{
			get
			{
				return this._searchURL;
			}
			set
			{
				if ((this._searchURL != value))
				{
					this.OnsearchURLChanging(value);
					this.SendPropertyChanging();
					this._searchURL = value;
					this.SendPropertyChanged("searchURL");
					this.OnsearchURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eLocalURL", DbType="VarChar(500)")]
		public string eLocalURL
		{
			get
			{
				return this._eLocalURL;
			}
			set
			{
				if ((this._eLocalURL != value))
				{
					this.OneLocalURLChanging(value);
					this.SendPropertyChanging();
					this._eLocalURL = value;
					this.SendPropertyChanged("eLocalURL");
					this.OneLocalURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logo", DbType="VarChar(500)")]
		public string logo
		{
			get
			{
				return this._logo;
			}
			set
			{
				if ((this._logo != value))
				{
					this.OnlogoChanging(value);
					this.SendPropertyChanging();
					this._logo = value;
					this.SendPropertyChanged("logo");
					this.OnlogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address2", DbType="VarChar(500)")]
		public string address2
		{
			get
			{
				return this._address2;
			}
			set
			{
				if ((this._address2 != value))
				{
					this.Onaddress2Changing(value);
					this.SendPropertyChanging();
					this._address2 = value;
					this.SendPropertyChanged("address2");
					this.Onaddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postal_code", DbType="VarChar(25)")]
		public string postal_code
		{
			get
			{
				return this._postal_code;
			}
			set
			{
				if ((this._postal_code != value))
				{
					this.Onpostal_codeChanging(value);
					this.SendPropertyChanging();
					this._postal_code = value;
					this.SendPropertyChanged("postal_code");
					this.Onpostal_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mCodeID", DbType="Int NOT NULL")]
		public int mCodeID
		{
			get
			{
				return this._mCodeID;
			}
			set
			{
				if ((this._mCodeID != value))
				{
					this.OnmCodeIDChanging(value);
					this.SendPropertyChanging();
					this._mCodeID = value;
					this.SendPropertyChanged("mCodeID");
					this.OnmCodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salesRepID", DbType="Int")]
		public System.Nullable<int> salesRepID
		{
			get
			{
				return this._salesRepID;
			}
			set
			{
				if ((this._salesRepID != value))
				{
					this.OnsalesRepIDChanging(value);
					this.SendPropertyChanging();
					this._salesRepID = value;
					this.SendPropertyChanged("salesRepID");
					this.OnsalesRepIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APIKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> APIKey
		{
			get
			{
				return this._APIKey;
			}
			set
			{
				if ((this._APIKey != value))
				{
					this.OnAPIKeyChanging(value);
					this.SendPropertyChanging();
					this._APIKey = value;
					this.SendPropertyChanged("APIKey");
					this.OnAPIKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tier", DbType="Int NOT NULL")]
		public int tier
		{
			get
			{
				return this._tier;
			}
			set
			{
				if ((this._tier != value))
				{
					this.OntierChanging(value);
					this.SendPropertyChanging();
					this._tier = value;
					this.SendPropertyChanged("tier");
					this.OntierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_showWebsite", DbType="Bit NOT NULL")]
		public bool showWebsite
		{
			get
			{
				return this._showWebsite;
			}
			set
			{
				if ((this._showWebsite != value))
				{
					this.OnshowWebsiteChanging(value);
					this.SendPropertyChanging();
					this._showWebsite = value;
					this.SendPropertyChanged("showWebsite");
					this.OnshowWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_PartState", Storage="_PartStates", ThisKey="stateID", OtherKey="stateID")]
		public EntitySet<PartState> PartStates
		{
			get
			{
				return this._PartStates;
			}
			set
			{
				this._PartStates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerPricing", Storage="_CustomerPricings", ThisKey="cust_id", OtherKey="cust_id")]
		public EntitySet<CustomerPricing> CustomerPricings
		{
			get
			{
				return this._CustomerPricings;
			}
			set
			{
				this._CustomerPricings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PartStates(PartState entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_PartStates(PartState entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_CustomerPricings(CustomerPricing entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_CustomerPricings(CustomerPricing entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApiAccess")]
	public partial class ApiAccess : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Guid _key_id;
		
		private System.Guid _module_id;
		
		private EntityRef<ApiKey> _ApiKey;
		
		private EntityRef<ApiModule> _ApiModule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void Onkey_idChanging(System.Guid value);
    partial void Onkey_idChanged();
    partial void Onmodule_idChanging(System.Guid value);
    partial void Onmodule_idChanged();
    #endregion
		
		public ApiAccess()
		{
			this._ApiKey = default(EntityRef<ApiKey>);
			this._ApiModule = default(EntityRef<ApiModule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_key_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid key_id
		{
			get
			{
				return this._key_id;
			}
			set
			{
				if ((this._key_id != value))
				{
					if (this._ApiKey.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onkey_idChanging(value);
					this.SendPropertyChanging();
					this._key_id = value;
					this.SendPropertyChanged("key_id");
					this.Onkey_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_module_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid module_id
		{
			get
			{
				return this._module_id;
			}
			set
			{
				if ((this._module_id != value))
				{
					if (this._ApiModule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmodule_idChanging(value);
					this.SendPropertyChanging();
					this._module_id = value;
					this.SendPropertyChanged("module_id");
					this.Onmodule_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ApiKey_ApiAccess", Storage="_ApiKey", ThisKey="key_id", OtherKey="id", IsForeignKey=true)]
		public ApiKey ApiKey
		{
			get
			{
				return this._ApiKey.Entity;
			}
			set
			{
				ApiKey previousValue = this._ApiKey.Entity;
				if (((previousValue != value) 
							|| (this._ApiKey.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApiKey.Entity = null;
						previousValue.ApiAccesses.Remove(this);
					}
					this._ApiKey.Entity = value;
					if ((value != null))
					{
						value.ApiAccesses.Add(this);
						this._key_id = value.id;
					}
					else
					{
						this._key_id = default(System.Guid);
					}
					this.SendPropertyChanged("ApiKey");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ApiModule_ApiAccess", Storage="_ApiModule", ThisKey="module_id", OtherKey="id", IsForeignKey=true)]
		public ApiModule ApiModule
		{
			get
			{
				return this._ApiModule.Entity;
			}
			set
			{
				ApiModule previousValue = this._ApiModule.Entity;
				if (((previousValue != value) 
							|| (this._ApiModule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApiModule.Entity = null;
						previousValue.ApiAccesses.Remove(this);
					}
					this._ApiModule.Entity = value;
					if ((value != null))
					{
						value.ApiAccesses.Add(this);
						this._module_id = value.id;
					}
					else
					{
						this._module_id = default(System.Guid);
					}
					this.SendPropertyChanged("ApiModule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApiKey")]
	public partial class ApiKey : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Guid _api_key;
		
		private System.Guid _type_id;
		
		private System.Guid _user_id;
		
		private System.DateTime _date_added;
		
		private EntitySet<ApiAccess> _ApiAccesses;
		
		private EntityRef<ApiKeyType> _ApiKeyType;
		
		private EntityRef<CustomerUser> _CustomerUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void Onapi_keyChanging(System.Guid value);
    partial void Onapi_keyChanged();
    partial void Ontype_idChanging(System.Guid value);
    partial void Ontype_idChanged();
    partial void Onuser_idChanging(System.Guid value);
    partial void Onuser_idChanged();
    partial void Ondate_addedChanging(System.DateTime value);
    partial void Ondate_addedChanged();
    #endregion
		
		public ApiKey()
		{
			this._ApiAccesses = new EntitySet<ApiAccess>(new Action<ApiAccess>(this.attach_ApiAccesses), new Action<ApiAccess>(this.detach_ApiAccesses));
			this._ApiKeyType = default(EntityRef<ApiKeyType>);
			this._CustomerUser = default(EntityRef<CustomerUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_api_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid api_key
		{
			get
			{
				return this._api_key;
			}
			set
			{
				if ((this._api_key != value))
				{
					this.Onapi_keyChanging(value);
					this.SendPropertyChanging();
					this._api_key = value;
					this.SendPropertyChanged("api_key");
					this.Onapi_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid type_id
		{
			get
			{
				return this._type_id;
			}
			set
			{
				if ((this._type_id != value))
				{
					if (this._ApiKeyType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontype_idChanging(value);
					this.SendPropertyChanging();
					this._type_id = value;
					this.SendPropertyChanged("type_id");
					this.Ontype_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._CustomerUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_added", DbType="DateTime NOT NULL")]
		public System.DateTime date_added
		{
			get
			{
				return this._date_added;
			}
			set
			{
				if ((this._date_added != value))
				{
					this.Ondate_addedChanging(value);
					this.SendPropertyChanging();
					this._date_added = value;
					this.SendPropertyChanged("date_added");
					this.Ondate_addedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ApiKey_ApiAccess", Storage="_ApiAccesses", ThisKey="id", OtherKey="key_id")]
		public EntitySet<ApiAccess> ApiAccesses
		{
			get
			{
				return this._ApiAccesses;
			}
			set
			{
				this._ApiAccesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ApiKeyType_ApiKey", Storage="_ApiKeyType", ThisKey="type_id", OtherKey="id", IsForeignKey=true)]
		public ApiKeyType ApiKeyType
		{
			get
			{
				return this._ApiKeyType.Entity;
			}
			set
			{
				ApiKeyType previousValue = this._ApiKeyType.Entity;
				if (((previousValue != value) 
							|| (this._ApiKeyType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApiKeyType.Entity = null;
						previousValue.ApiKeys.Remove(this);
					}
					this._ApiKeyType.Entity = value;
					if ((value != null))
					{
						value.ApiKeys.Add(this);
						this._type_id = value.id;
					}
					else
					{
						this._type_id = default(System.Guid);
					}
					this.SendPropertyChanged("ApiKeyType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerUser_ApiKey", Storage="_CustomerUser", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
		public CustomerUser CustomerUser
		{
			get
			{
				return this._CustomerUser.Entity;
			}
			set
			{
				CustomerUser previousValue = this._CustomerUser.Entity;
				if (((previousValue != value) 
							|| (this._CustomerUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerUser.Entity = null;
						previousValue.ApiKeys.Remove(this);
					}
					this._CustomerUser.Entity = value;
					if ((value != null))
					{
						value.ApiKeys.Add(this);
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(System.Guid);
					}
					this.SendPropertyChanged("CustomerUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ApiAccesses(ApiAccess entity)
		{
			this.SendPropertyChanging();
			entity.ApiKey = this;
		}
		
		private void detach_ApiAccesses(ApiAccess entity)
		{
			this.SendPropertyChanging();
			entity.ApiKey = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApiKeyType")]
	public partial class ApiKeyType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _type;
		
		private System.DateTime _date_added;
		
		private EntitySet<ApiKey> _ApiKeys;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void Ondate_addedChanging(System.DateTime value);
    partial void Ondate_addedChanged();
    #endregion
		
		public ApiKeyType()
		{
			this._ApiKeys = new EntitySet<ApiKey>(new Action<ApiKey>(this.attach_ApiKeys), new Action<ApiKey>(this.detach_ApiKeys));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(500)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_added", DbType="DateTime NOT NULL")]
		public System.DateTime date_added
		{
			get
			{
				return this._date_added;
			}
			set
			{
				if ((this._date_added != value))
				{
					this.Ondate_addedChanging(value);
					this.SendPropertyChanging();
					this._date_added = value;
					this.SendPropertyChanged("date_added");
					this.Ondate_addedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ApiKeyType_ApiKey", Storage="_ApiKeys", ThisKey="id", OtherKey="type_id")]
		public EntitySet<ApiKey> ApiKeys
		{
			get
			{
				return this._ApiKeys;
			}
			set
			{
				this._ApiKeys.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ApiKeys(ApiKey entity)
		{
			this.SendPropertyChanging();
			entity.ApiKeyType = this;
		}
		
		private void detach_ApiKeys(ApiKey entity)
		{
			this.SendPropertyChanging();
			entity.ApiKeyType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApiModules")]
	public partial class ApiModule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _name;
		
		private System.Nullable<System.Guid> _access_level;
		
		private System.DateTime _date_added;
		
		private EntitySet<ApiAccess> _ApiAccesses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onaccess_levelChanging(System.Nullable<System.Guid> value);
    partial void Onaccess_levelChanged();
    partial void Ondate_addedChanging(System.DateTime value);
    partial void Ondate_addedChanged();
    #endregion
		
		public ApiModule()
		{
			this._ApiAccesses = new EntitySet<ApiAccess>(new Action<ApiAccess>(this.attach_ApiAccesses), new Action<ApiAccess>(this.detach_ApiAccesses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(500)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_access_level", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> access_level
		{
			get
			{
				return this._access_level;
			}
			set
			{
				if ((this._access_level != value))
				{
					this.Onaccess_levelChanging(value);
					this.SendPropertyChanging();
					this._access_level = value;
					this.SendPropertyChanged("access_level");
					this.Onaccess_levelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_added", DbType="DateTime NOT NULL")]
		public System.DateTime date_added
		{
			get
			{
				return this._date_added;
			}
			set
			{
				if ((this._date_added != value))
				{
					this.Ondate_addedChanging(value);
					this.SendPropertyChanging();
					this._date_added = value;
					this.SendPropertyChanged("date_added");
					this.Ondate_addedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ApiModule_ApiAccess", Storage="_ApiAccesses", ThisKey="id", OtherKey="module_id")]
		public EntitySet<ApiAccess> ApiAccesses
		{
			get
			{
				return this._ApiAccesses;
			}
			set
			{
				this._ApiAccesses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ApiAccesses(ApiAccess entity)
		{
			this.SendPropertyChanging();
			entity.ApiModule = this;
		}
		
		private void detach_ApiAccesses(ApiAccess entity)
		{
			this.SendPropertyChanging();
			entity.ApiModule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerUser")]
	public partial class CustomerUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _name;
		
		private string _email;
		
		private string _password;
		
		private System.Nullable<int> _customerID;
		
		private System.DateTime _date_added;
		
		private bool _active;
		
		private int _locationID;
		
		private bool _isSudo;
		
		private int _cust_ID;
		
		private System.Nullable<bool> _NotCustomer;
		
		private EntitySet<ApiKey> _ApiKeys;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OncustomerIDChanging(System.Nullable<int> value);
    partial void OncustomerIDChanged();
    partial void Ondate_addedChanging(System.DateTime value);
    partial void Ondate_addedChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OnlocationIDChanging(int value);
    partial void OnlocationIDChanged();
    partial void OnisSudoChanging(bool value);
    partial void OnisSudoChanged();
    partial void Oncust_IDChanging(int value);
    partial void Oncust_IDChanged();
    partial void OnNotCustomerChanging(System.Nullable<bool> value);
    partial void OnNotCustomerChanged();
    #endregion
		
		public CustomerUser()
		{
			this._ApiKeys = new EntitySet<ApiKey>(new Action<ApiKey>(this.attach_ApiKeys), new Action<ApiKey>(this.detach_ApiKeys));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(255)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerID", DbType="Int")]
		public System.Nullable<int> customerID
		{
			get
			{
				return this._customerID;
			}
			set
			{
				if ((this._customerID != value))
				{
					this.OncustomerIDChanging(value);
					this.SendPropertyChanging();
					this._customerID = value;
					this.SendPropertyChanged("customerID");
					this.OncustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_added", DbType="DateTime NOT NULL")]
		public System.DateTime date_added
		{
			get
			{
				return this._date_added;
			}
			set
			{
				if ((this._date_added != value))
				{
					this.Ondate_addedChanging(value);
					this.SendPropertyChanging();
					this._date_added = value;
					this.SendPropertyChanged("date_added");
					this.Ondate_addedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locationID", DbType="Int NOT NULL")]
		public int locationID
		{
			get
			{
				return this._locationID;
			}
			set
			{
				if ((this._locationID != value))
				{
					this.OnlocationIDChanging(value);
					this.SendPropertyChanging();
					this._locationID = value;
					this.SendPropertyChanged("locationID");
					this.OnlocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isSudo", DbType="Bit NOT NULL")]
		public bool isSudo
		{
			get
			{
				return this._isSudo;
			}
			set
			{
				if ((this._isSudo != value))
				{
					this.OnisSudoChanging(value);
					this.SendPropertyChanging();
					this._isSudo = value;
					this.SendPropertyChanged("isSudo");
					this.OnisSudoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_ID", DbType="Int NOT NULL")]
		public int cust_ID
		{
			get
			{
				return this._cust_ID;
			}
			set
			{
				if ((this._cust_ID != value))
				{
					this.Oncust_IDChanging(value);
					this.SendPropertyChanging();
					this._cust_ID = value;
					this.SendPropertyChanged("cust_ID");
					this.Oncust_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotCustomer", DbType="Bit")]
		public System.Nullable<bool> NotCustomer
		{
			get
			{
				return this._NotCustomer;
			}
			set
			{
				if ((this._NotCustomer != value))
				{
					this.OnNotCustomerChanging(value);
					this.SendPropertyChanging();
					this._NotCustomer = value;
					this.SendPropertyChanged("NotCustomer");
					this.OnNotCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerUser_ApiKey", Storage="_ApiKeys", ThisKey="id", OtherKey="user_id")]
		public EntitySet<ApiKey> ApiKeys
		{
			get
			{
				return this._ApiKeys;
			}
			set
			{
				this._ApiKeys.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ApiKeys(ApiKey entity)
		{
			this.SendPropertyChanging();
			entity.CustomerUser = this;
		}
		
		private void detach_ApiKeys(ApiKey entity)
		{
			this.SendPropertyChanging();
			entity.CustomerUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IPtoDNS")]
	public partial class IPtoDNS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ipaddress;
		
		private string _dnsentry;
		
		private System.DateTime _dateChecked;
		
		private EntitySet<APIAnalytic> _APIAnalytics;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnipaddressChanging(string value);
    partial void OnipaddressChanged();
    partial void OndnsentryChanging(string value);
    partial void OndnsentryChanged();
    partial void OndateCheckedChanging(System.DateTime value);
    partial void OndateCheckedChanged();
    #endregion
		
		public IPtoDNS()
		{
			this._APIAnalytics = new EntitySet<APIAnalytic>(new Action<APIAnalytic>(this.attach_APIAnalytics), new Action<APIAnalytic>(this.detach_APIAnalytics));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ipaddress", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string ipaddress
		{
			get
			{
				return this._ipaddress;
			}
			set
			{
				if ((this._ipaddress != value))
				{
					this.OnipaddressChanging(value);
					this.SendPropertyChanging();
					this._ipaddress = value;
					this.SendPropertyChanged("ipaddress");
					this.OnipaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dnsentry", DbType="VarChar(255)")]
		public string dnsentry
		{
			get
			{
				return this._dnsentry;
			}
			set
			{
				if ((this._dnsentry != value))
				{
					this.OndnsentryChanging(value);
					this.SendPropertyChanging();
					this._dnsentry = value;
					this.SendPropertyChanged("dnsentry");
					this.OndnsentryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateChecked", DbType="DateTime NOT NULL")]
		public System.DateTime dateChecked
		{
			get
			{
				return this._dateChecked;
			}
			set
			{
				if ((this._dateChecked != value))
				{
					this.OndateCheckedChanging(value);
					this.SendPropertyChanging();
					this._dateChecked = value;
					this.SendPropertyChanged("dateChecked");
					this.OndateCheckedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IPtoDNS_APIAnalytic", Storage="_APIAnalytics", ThisKey="ID", OtherKey="addressID")]
		public EntitySet<APIAnalytic> APIAnalytics
		{
			get
			{
				return this._APIAnalytics;
			}
			set
			{
				this._APIAnalytics.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_APIAnalytics(APIAnalytic entity)
		{
			this.SendPropertyChanging();
			entity.IPtoDNS = this;
		}
		
		private void detach_APIAnalytics(APIAnalytic entity)
		{
			this.SendPropertyChanging();
			entity.IPtoDNS = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.APIAnalytics")]
	public partial class APIAnalytic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private int _addressID;
		
		private string _url;
		
		private string _method;
		
		private string _querystring;
		
		private System.DateTime _date;
		
		private string _referrer;
		
		private string _HttpMethod;
		
		private EntityRef<IPtoDNS> _IPtoDNS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnaddressIDChanging(int value);
    partial void OnaddressIDChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OnmethodChanging(string value);
    partial void OnmethodChanged();
    partial void OnquerystringChanging(string value);
    partial void OnquerystringChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnreferrerChanging(string value);
    partial void OnreferrerChanged();
    partial void OnHttpMethodChanging(string value);
    partial void OnHttpMethodChanged();
    #endregion
		
		public APIAnalytic()
		{
			this._IPtoDNS = default(EntityRef<IPtoDNS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addressID", DbType="Int NOT NULL")]
		public int addressID
		{
			get
			{
				return this._addressID;
			}
			set
			{
				if ((this._addressID != value))
				{
					if (this._IPtoDNS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnaddressIDChanging(value);
					this.SendPropertyChanging();
					this._addressID = value;
					this.SendPropertyChanged("addressID");
					this.OnaddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_method", DbType="VarChar(255)")]
		public string method
		{
			get
			{
				return this._method;
			}
			set
			{
				if ((this._method != value))
				{
					this.OnmethodChanging(value);
					this.SendPropertyChanging();
					this._method = value;
					this.SendPropertyChanged("method");
					this.OnmethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_querystring", DbType="VarChar(255)")]
		public string querystring
		{
			get
			{
				return this._querystring;
			}
			set
			{
				if ((this._querystring != value))
				{
					this.OnquerystringChanging(value);
					this.SendPropertyChanging();
					this._querystring = value;
					this.SendPropertyChanged("querystring");
					this.OnquerystringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_referrer", DbType="VarChar(255) NULL")]
		public string referrer
		{
			get
			{
				return this._referrer;
			}
			set
			{
				if ((this._referrer != value))
				{
					this.OnreferrerChanging(value);
					this.SendPropertyChanging();
					this._referrer = value;
					this.SendPropertyChanged("referrer");
					this.OnreferrerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HttpMethod", DbType="VarChar(100) NULL")]
		public string HttpMethod
		{
			get
			{
				return this._HttpMethod;
			}
			set
			{
				if ((this._HttpMethod != value))
				{
					this.OnHttpMethodChanging(value);
					this.SendPropertyChanging();
					this._HttpMethod = value;
					this.SendPropertyChanged("HttpMethod");
					this.OnHttpMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IPtoDNS_APIAnalytic", Storage="_IPtoDNS", ThisKey="addressID", OtherKey="ID", IsForeignKey=true)]
		public IPtoDNS IPtoDNS
		{
			get
			{
				return this._IPtoDNS.Entity;
			}
			set
			{
				IPtoDNS previousValue = this._IPtoDNS.Entity;
				if (((previousValue != value) 
							|| (this._IPtoDNS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IPtoDNS.Entity = null;
						previousValue.APIAnalytics.Remove(this);
					}
					this._IPtoDNS.Entity = value;
					if ((value != null))
					{
						value.APIAnalytics.Add(this);
						this._addressID = value.ID;
					}
					else
					{
						this._addressID = default(int);
					}
					this.SendPropertyChanged("IPtoDNS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
